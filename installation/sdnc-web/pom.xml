<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.onap.sdnc.oam</groupId>
        <artifactId>installation</artifactId>
        <version>2.2.0-SNAPSHOT</version>
    </parent>

    <groupId>org.onap.sdnc.oam</groupId>
    <artifactId>installation-sdnc-web</artifactId>
    <version>2.2.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>sdnc-oam :: installation :: ${project.artifactId}</name>
    <description>Creates SDN Controller WebUI Docker container</description>

    <properties>
        <base.image.repo>docker.io/bitnami/nginx:1.16-debian-9</base.image.repo>
        <image.name>onap/sdnc-web-image</image.name>
        <sdnc.project.version>${project.version}</sdnc.project.version>
        <sdnc.build.timestamp>${maven.build.timestamp}</sdnc.build.timestamp>
        <docker.buildArg.https_proxy>${https_proxy}</docker.buildArg.https_proxy>
        <maven.build.timestamp.format>yyyyMMdd'T'HHmmss'Z'</maven.build.timestamp.format>
        <docker.push.phase>deploy</docker.push.phase>
        <docker.verbose>true</docker.verbose>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.onap.ccsdk.features.sdnr.wt</groupId>
            <artifactId>sdnr-wt-odlux-installer</artifactId>
            <version>${ccsdk.features.version}</version>
            <type>zip</type>
            <classifier>repo</classifier>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>${basedir}/../TagVersion.groovy</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-dockerfile</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <includes>
                                        <include>Dockerfile</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-siteconf</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>*.conf</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-scripts</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/bin</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/scripts</directory>
                                    <includes>
                                        <include>*.sh</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack features</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/html</outputDirectory>
                            <excludeTransitive>true</excludeTransitive>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.16.5</version>
                <inherited>false</inherited>
                <configuration>
                    <images>
                        <image>
                            <name>${image.name}</name>
                            <build>
                                <cleanup>try</cleanup>
                                <dockerFileDir>${basedir}/target/docker-stage</dockerFileDir>
                                <dockerFile>${basedir}/target/docker-stage/Dockerfile</dockerFile>
                                <tags>
                                    <tag>${project.docker.latestminortag.version}</tag>
                                    <tag>${project.docker.latestfulltag.version}</tag>
                                    <tag>${project.docker.latesttagtimestamp.version}</tag>
                                </tags>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-images</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>push-images</id>
                        <phase>${docker.push.phase}</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
