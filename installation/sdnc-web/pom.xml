<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.onap.ccsdk.parent</groupId>
		<artifactId>odlparent-lite</artifactId>
		<version>1.5.10-SNAPSHOT</version>
	</parent>

	<groupId>org.onap.sdnc.oam</groupId>
	<artifactId>installation-sdnc-web</artifactId>
	<version>1.8.5-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>sdnc-oam :: installation :: ${project.artifactId}</name>
	<description>Creates SDN Controller WebUI Docker container</description>

	<properties>
		<base.image.repo>docker.io/bitnami/nginx:1.16-debian-9</base.image.repo>
		<image.name>onap/sdnc-web-image</image.name>
		<sdnc.project.version>${project.version}</sdnc.project.version>
		<sdnc.build.timestamp>${maven.build.timestamp}</sdnc.build.timestamp>
		<ccsdk.groupId>org.onap.ccsdk.features.sdnr.wt</ccsdk.groupId>
		<ccsdk.features.version>0.7.3</ccsdk.features.version>
		<docker.buildArg.https_proxy>${https_proxy}</docker.buildArg.https_proxy>
		<maven.build.timestamp.format>yyyyMMdd'T'HHmmss'Z'</maven.build.timestamp.format>
		<docker.push.phase>deploy</docker.push.phase>
		<docker.verbose>true</docker.verbose>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.onap.ccsdk.features.sdnr.wt</groupId>
			<artifactId>sdnr-wt-odlux-framework</artifactId>
			<version>${ccsdk.features.version}</version>
		</dependency>
		<dependency>
			<groupId>org.onap.ccsdk.features.sdnr.wt</groupId>
			<artifactId>sdnr-wt-odlux-apps-installer</artifactId>
			<version>${ccsdk.features.version}</version>
			<type>zip</type>
			<classifier>repo</classifier>
		</dependency>
		<dependency>
			<groupId>org.onap.ccsdk.features.sdnr.wt</groupId>
			<artifactId>sdnr-wt-helpserver-installer</artifactId>
			<version>${ccsdk.features.version}</version>
			<type>zip</type>
			<classifier>repo</classifier>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>${basedir}/../TagVersion.groovy</source>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-dockerfile</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>						<!-- here the phase you need -->
						<phase>validate</phase>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<includes>
										<include>Dockerfile</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-siteconf</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>						<!-- here the phase you need -->
						<phase>validate</phase>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<includes>
										<include>*.conf</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>

					<execution>
						<id>copy-scripts</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>						<!-- here the phase you need -->
						<phase>validate</phase>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage/bin</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/scripts</directory>
									<includes>
										<include>*.sh</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack features</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>

						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-framework</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- connectApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-connectApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- eventLogApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-eventLogApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- helpApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-helpApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- maintenanceApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-maintenanceApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- minimumApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-minimumApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- configurationApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-configurationApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- demoApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-demoApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- faultApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-faultApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/*</includes>
								</artifactItem>
								<!-- inventoryApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-inventoryApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- mediatorApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-mediatorApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- performanceHistoryApp -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-odlux-app-performanceHistoryApp</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>odlux/**</includes>
								</artifactItem>
								<!-- helpserver resources -->
								<artifactItem>
									<groupId>${ccsdk.groupId}</groupId>
									<artifactId>sdnr-wt-helpserver-provider</artifactId>
									<version>${ccsdk.features.version}</version>
									<type>jar</type>
									<overWrite>false</overWrite>
									<outputDirectory>${project.build.directory}/docker-stage/html</outputDirectory>
									<includes>help/**</includes>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.16.5</version>
				<inherited>false</inherited>
				<configuration>
					<images>
						<image>
							<name>${image.name}</name>
							<build>
								<cleanup>try</cleanup>
								<dockerFileDir>${basedir}/target/docker-stage</dockerFileDir>
								<dockerFile>${basedir}/target/docker-stage/Dockerfile</dockerFile>
								<tags>
									<tag>${project.docker.latestminortag.version}</tag>
									<tag>${project.docker.latestfulltag.version}</tag>
									<tag>${project.docker.latesttagtimestamp.version}</tag>
								</tags>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>generate-images</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>push-images</id>
						<phase>${docker.push.phase}</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
