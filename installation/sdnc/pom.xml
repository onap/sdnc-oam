<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>org.onap.ccsdk.parent</groupId>
		<artifactId>odlparent-lite</artifactId>
		<version>1.1.2-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<packaging>pom</packaging>
	<groupId>org.onap.sdnc.oam</groupId>
	<artifactId>installation-sdnc</artifactId>
	<version>1.4.2-SNAPSHOT</version>

	<name>sdnc-oam :: installation :: ${project.artifactId}</name>
	<description>Creates SDN Controller Docker container</description>

	<properties>
		<image.name>onap/sdnc-image</image.name>
		<sdnc.project.version>${project.version}</sdnc.project.version>
		<sdnc.northbound.version>1.4.2-SNAPSHOT</sdnc.northbound.version>
		<ccsdk.docker.version>0.3-STAGING-latest</ccsdk.docker.version>
		<sdnc.keystore>keystore.sdnc.p12</sdnc.keystore>
		<sdnc.keypass>onap3.0</sdnc.keypass>
		<sdnc.secureport>8443</sdnc.secureport>
		<docker.buildArg.https_proxy>${https_proxy}</docker.buildArg.https_proxy>
		<docker.push.phase>deploy</docker.push.phase>
		<docker.verbose>true</docker.verbose>
		<maven.build.timestamp.format>yyyyMMdd'T'HHmmss'Z'</maven.build.timestamp.format>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.onap.sdnc.northbound</groupId>
			<artifactId>generic-resource-api-installer</artifactId>
			<version>${sdnc.northbound.version}</version>
			<classifier>repo</classifier>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>org.onap.sdnc.northbound</groupId>
			<artifactId>vnfapi-installer</artifactId>
			<version>${sdnc.northbound.version}</version>
			<classifier>repo</classifier>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>org.onap.sdnc.northbound</groupId>
			<artifactId>vnftools-installer</artifactId>
			<version>${sdnc.northbound.version}</version>
			<classifier>repo</classifier>
			<type>zip</type>
		</dependency>
		<dependency>
			<groupId>org.onap.sdnc.northbound</groupId>
			<artifactId>sdnc-northbound-features-installer</artifactId>
			<version>${sdnc.northbound.version}</version>
			<classifier>repo</classifier>
			<type>zip</type>
		</dependency>
	</dependencies>

	<build>
		<plugins>


			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								println project.properties['sdnc.project.version'];
								def versionArray;
								if ( project.properties['sdnc.project.version'] != null ) {
								    versionArray = project.properties['sdnc.project.version'].split('\\.');
								}

								if (project.properties['sdnc.project.version'].endsWith("-SNAPSHOT"))
								{
								    project.properties['project.docker.latesttag.version']=versionArray[0] + '.' + versionArray[1] + "-STAGING-latest";
								} else {
								    project.properties['project.docker.latesttag.version']=versionArray[0] + '.' + versionArray[1] + "-STAGING-latest";
								}

								println 'New Tag for docker:' + project.properties['project.docker.latesttag.version'];
							</source>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.16.5</version>
				<inherited>false</inherited>
				<configuration>
					<images>
						<image>
							<name>${image.name}</name>
							<build>
								<cleanup>try</cleanup>
								<dockerFileDir>${basedir}/target/docker-stage</dockerFileDir>
								<dockerFile>${basedir}/target/docker-stage/Dockerfile</dockerFile>
								<tags>
									<tag>${project.version}</tag>
									<tag>${project.version}-STAGING-${maven.build.timestamp}</tag>
									<tag>${project.docker.latesttag.version}</tag>
								</tags>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>generate-images</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>

					<execution>
						<id>push-images</id>
						<phase>${docker.push.phase}</phase>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin>



			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-dockerfile</id>
						<goals>
							<goal>copy-resources</goal>
						</goals><!-- here the phase you need -->
						<phase>validate</phase>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<includes>
										<include>Dockerfile</include>
									</includes>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>

					<execution>
						<id>copy-scripts</id>
						<goals>
							<goal>copy-resources</goal>
						</goals><!-- here the phase you need -->
						<phase>validate</phase>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/bin</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/scripts</directory>
									<includes>
										<include>*.sh</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>

					<execution>
						<id>copy-tarballs</id>
						<goals>
							<goal>copy-resources</goal>
						</goals><!-- here the phase you need -->
						<phase>validate</phase>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<includes>
										<include>idmlight.db.mv.db</include>
										<include>AAF_RootCA.cer</include>
										<include>truststoreONAPall.jks</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-data</id>
						<goals>
							<goal>copy-resources</goal>
						</goals><!-- here the phase you need -->
						<phase>validate</phase>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/data</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<includes>
										<include>*.dump</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-properties</id>
						<goals>
							<goal>copy-resources</goal>
						</goals><!-- here the phase you need -->
						<phase>validate</phase>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/data/properties</outputDirectory>
							<resources>
								<resource>
									<directory>../src/main/properties</directory>
									<includes>
										<include>*.properties</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-keystores</id>
						<goals>
							<goal>copy-resources</goal>
						</goals><!-- here the phase you need -->
						<phase>validate</phase>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/data/stores</outputDirectory>
							<resources>
								<resource>
									<directory>../src/main/stores</directory>
									<includes>
										<include>*.jks</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>unpack sdnc features</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
					<execution>
						<id>unpack dgs</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc</outputDirectory>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>platform-logic-installer</artifactId>
									<version>${project.version}</version>
									<type>zip</type>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<groupId>org.codehaus.mojo</groupId>
				<version>1.5.0</version>
				<executions>

					<execution>
						<id>change shell permissions</id>
						<phase>process-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>/usr/bin/find</executable>
							<arguments>
								<argument>${basedir}/target/docker-stage/opt/onap/sdnc</argument>
								<argument>-name</argument>
								<argument>*.sh</argument>
								<argument>-exec</argument>
								<argument>chmod</argument>
								<argument>+x</argument>
								<argument>{}</argument>
								<argument>;</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>


		</plugins>

	</build>
	<organization>
		<name>ONAP</name>
	</organization>
</project>
