<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.onap.sdnc.oam</groupId>
        <artifactId>installation</artifactId>
        <version>2.2.0-SNAPSHOT</version>
    </parent>

    <groupId>org.onap.sdnc.oam</groupId>
    <artifactId>installation-sdnc</artifactId>
    <version>2.2.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>sdnc-oam :: installation :: ${project.artifactId}</name>
    <description>Creates SDN Controller Docker container</description>
    <organization>
        <name>ONAP</name>
    </organization>

    <properties>
        <image.name>onap/sdnc-aaf-image</image.name>
        <standalone.image.name>onap/sdnc-image</standalone.image.name>
        <sdnc.project.version>${project.version}</sdnc.project.version>
        <sdnc.build.timestamp>${maven.build.timestamp}</sdnc.build.timestamp>
        <sdnc.northbound.version>2.2.0-SNAPSHOT</sdnc.northbound.version>
        <ccsdk.docker.version>1.2-SNAPSHOT-latest</ccsdk.docker.version>
        <sdnc.keystore>org.onap.sdnc.p12</sdnc.keystore>
        <sdnc.keypass><![CDATA[;:G58,7ZhqOSI:7^oZCY[9Dv]]></sdnc.keypass>
        <sdnc.secureport>8443</sdnc.secureport>
        <docker.buildArg.https_proxy>${https_proxy}</docker.buildArg.https_proxy>
        <docker.push.phase>deploy</docker.push.phase>
        <docker.verbose>true</docker.verbose> 
        <docker.autoCreateCustomNetworks>true</docker.autoCreateCustomNetworks>
        <maven.build.timestamp.format>yyyyMMdd'T'HHmmss'Z'</maven.build.timestamp.format>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.onap.sdnc.northbound</groupId>
            <artifactId>generic-resource-api-installer</artifactId>
            <version>${sdnc.northbound.version}</version>
            <type>zip</type>
            <classifier>repo</classifier>
        </dependency>
       <dependency>
            <groupId>org.onap.sdnc.northbound</groupId>
            <artifactId>optical-service-installer</artifactId>
            <version>${sdnc.northbound.version}</version>
            <type>zip</type>
            <classifier>repo</classifier>
        </dependency>
        <dependency>
            <groupId>org.onap.sdnc.northbound</groupId>
            <artifactId>vnftools-installer</artifactId>
            <version>${sdnc.northbound.version}</version>
            <type>zip</type>
            <classifier>repo</classifier>
        </dependency>
        <dependency>
            <groupId>org.onap.sdnc.northbound</groupId>
            <artifactId>sdnc-northbound-features-installer</artifactId>
            <version>${sdnc.northbound.version}</version>
            <type>zip</type>
            <classifier>repo</classifier>
        </dependency>
    </dependencies>

    <build>
        <plugins>


            <plugin>
                <groupId>org.codehaus.groovy.maven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>${basedir}/../TagVersion.groovy</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.28.0</version>
                <inherited>false</inherited>
                <executions>
                    <execution>
                        <id>generate-images</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                           <images>
                            <image>
                             <name>${image.name}</name>
                             <build>
                              <cleanup>try</cleanup>
                              <dockerFileDir>${basedir}/target/docker-stage</dockerFileDir>
                              <dockerFile>Dockerfile</dockerFile>
                              <tags>
                                 <tag>${project.docker.latestminortag.version}</tag>
                                 <tag>${project.docker.latestfulltag.version}</tag>
                                 <tag>${project.docker.latesttagtimestamp.version}</tag>
                              </tags>
                             </build>
                            </image>
                           </images>
                          </configuration>
                    </execution>
                    <execution>
                        <id>start-it-instance</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <images>
                                <image>
                                    <name>mariadb:10.5</name>
                                    <alias>sdnc-db</alias>
                                    <run>
                                        <env>
                                            <MYSQL_ROOT_PASSWORD>itsASecret</MYSQL_ROOT_PASSWORD>
                                            <MYSQL_USER>sdnctl</MYSQL_USER>
                                            <MYSQL_PASSWORD>gamma</MYSQL_PASSWORD>
                                            <MYSQL_DATABASE>sdnctl</MYSQL_DATABASE>
                                        </env>
                                        <network>
                                            <mode>custom</mode>
                                            <name>sdnc</name>
                                            <alias>dbhost</alias>
                                            <alias>sdnctldb01</alias>
                                            <alias>sdnctldb02</alias>
                                        </network>
                                        <ports>
                                            <port>sdncdb.port:3306</port>
                                        </ports>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                    </run>
                                </image>
                                <image>
                                    <name>${image.name}:${project.docker.latesttagtimestamp.version}</name>
                                    <alias>sdnc-container</alias>
                                    <run>
                                        <env>
                                            <ODL_ADMIN_PASSWORD>admin</ODL_ADMIN_PASSWORD>
                                            <MYSQL_ROOT_PASSWORD>itsASecret</MYSQL_ROOT_PASSWORD>
                                            <MYSQL_USER>sdnctl</MYSQL_USER>
                                            <MYSQL_PASSWORD>gamma</MYSQL_PASSWORD>
                                            <MYSQL_DATABASE>sdnctl</MYSQL_DATABASE>
                                            <SDNC_CONFIG_DIR>/opt/onap/sdnc/data/properties</SDNC_CONFIG_DIR>
                                            <KARAF_CONSOLE_LOG_LEVEL>INFO</KARAF_CONSOLE_LOG_LEVEL>
                                        </env>
                                        <dependsOn>
                                            <container>sdnc-db</container>
                                        </dependsOn>
                                        <network>
                                            <mode>custom</mode>
                                            <name>sdnc</name>
                                            <alias>sdnc</alias>
                                        </network>&gt;
                                        <ports>
                                            <port>sdnc.port:8181</port>
                                        </ports>
                                        <wait>
                                            <log>all warp coils are now operating at peak efficiency</log>
                                            <time>120000</time>
                                        </wait>
                                        <log>
                                            <enabled>true</enabled>
                                        </log>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-it-instance</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                    <execution>
                      <id>push-images</id>
                      <phase>${docker.push.phase}</phase>
                      <goals>
                       <goal>build</goal>
                       <goal>push</goal>
                      </goals>
                       <configuration>
                        <images>
                         <image>
                          <name>${image.name}</name>
                          <build>
                           <cleanup>try</cleanup>
                           <dockerFileDir>${basedir}/target/docker-stage</dockerFileDir>
                           <dockerFile>Dockerfile</dockerFile>
                           <tags>
                              <tag>${project.docker.latestminortag.version}</tag>
                              <tag>${project.docker.latestfulltag.version}</tag>
                              <tag>${project.docker.latesttagtimestamp.version}</tag>
                           </tags>
                          </build>
                         </image>
                        </images>
                       </configuration>
                   </execution>
                   <execution>
                     <id>generate-standalone-images</id>
                     <phase>package</phase>
                     <goals>
                      <goal>build</goal>
                     </goals>
                     <configuration>
                      <images>
                       <image>
                        <name>${standalone.image.name}</name>
                        <build>
                         <cleanup>try</cleanup>
                         <dockerFileDir>${basedir}/target/docker-stage</dockerFileDir>
                         <dockerFile>standalone.Dockerfile</dockerFile>
                         <tags>
                             <tag>${project.docker.latestminortag.version}</tag>
                             <tag>${project.docker.latestfulltag.version}</tag>
                             <tag>${project.docker.latesttagtimestamp.version}</tag>
                         </tags>
                        </build>
                       </image>
                      </images>
                     </configuration>
                   </execution>
                   <execution>
                     <id>push-standalone-images</id>
                     <phase>${docker.push.phase}</phase>
                     <goals>
                      <goal>build</goal>
                      <goal>push</goal>
                     </goals>
                     <configuration>
                       <images>
                        <image>
                         <name>${standalone.image.name}</name>
                         <build>
                          <cleanup>try</cleanup>
                          <dockerFileDir>${basedir}/target/docker-stage</dockerFileDir>
                          <dockerFile>standalone.Dockerfile</dockerFile>
                          <tags>
                             <tag>${project.docker.latestminortag.version}</tag>
                             <tag>${project.docker.latestfulltag.version}</tag>
                             <tag>${project.docker.latesttagtimestamp.version}</tag>
                          </tags>
                         </build>
                        </image>
                       </images>
                     </configuration>
                  </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-dockerfile</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/docker</directory>
                                    <includes>
                                        <include>Dockerfile</include>
                                        <include>standalone.Dockerfile</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-scripts</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/bin</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/scripts</directory>
                                    <includes>
                                        <include>*.py</include>
                                        <include>*.sh</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-tarballs</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>idmlight.db.mv.db</include>
                                        <include>truststoreONAPall.jks</include>
                                        <include>aaa-app-config.xml</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-data</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/data</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>*.dump</include>
                                        <include>oauth-aaa-app-config.xml</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-properties</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/data/properties</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../src/main/properties</directory>
                                    <includes>
                                        <include>*.properties</include>
                                        <include>*.props</include>
                                        <include>*.csv</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-keystores</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/data/stores</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../src/main/stores</directory>
                                    <includes>
                                        <include>*.jks</include>
                                        <include>*.keyfile</include>
                                        <include>*.p12</include>
                                    </includes>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>unpack sdnc features</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack dgs</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>platform-logic-installer</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack migration utility</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage/opt/onap/sdnc/data-migrator</outputDirectory>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.onap.sdnc.oam</groupId>
                                    <artifactId>data-migrator</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>change shell permissions</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>/usr/bin/find</executable>
                            <arguments>
                                <argument>${basedir}/target/docker-stage/opt/onap/sdnc</argument>
                                <argument>-name</argument>
                                <argument>*.sh</argument>
                                <argument>-exec</argument>
                                <argument>chmod</argument>
                                <argument>+x</argument>
                                <argument>{}</argument>
                                <argument>;</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                  <execution>
                    <goals>
                      <goal>integration-test</goal>
                      <goal>verify</goal>
                    </goals>
                  </execution>
                </executions>
                <configuration>
                  <skipITs>false</skipITs>
                  <environmentVariables>
                    <SDNC_PORT>${sdnc.port}</SDNC_PORT>
                  </environmentVariables>
                </configuration>
              </plugin>
        </plugins>
    </build>
</project>
