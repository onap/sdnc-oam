<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.onap.sdnc.oam</groupId>
        <artifactId>installation</artifactId>
        <version>2.6.1-SNAPSHOT</version>
    </parent>

    <artifactId>installation-ansible-server</artifactId>
    <packaging>pom</packaging>

    <name>sdnc-oam :: installation :: ${project.artifactId}</name>
    <description>Creates ansible-server Docker container</description>
    <organization>
        <name>ONAP</name>
    </organization>

    <properties>
        <image.name>onap/sdnc-ansible-server-image</image.name>
        <sdnc.project.version>${project.version}</sdnc.project.version>
        <sdnc.build.timestamp>${maven.build.timestamp}</sdnc.build.timestamp>
        <ccsdk.docker.version>${ccsdk.docker.ansible.server.version}</ccsdk.docker.version>
        <docker.buildArg.https_proxy>${https_proxy}</docker.buildArg.https_proxy>
        <maven.build.timestamp.format>yyyyMMdd'T'HHmmss'Z'</maven.build.timestamp.format>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>${basedir}/../TagVersion.groovy</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-files</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals><!-- here the phase you need -->
                        <phase>validate</phase>
                        <configuration>
                            <outputDirectory>${basedir}/target/docker-stage</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.34.0</version>
                        <inherited>false</inherited>
                        <configuration>
                            <images>
                                <image>
                                    <name>${image.name}</name>
                                    <build>
                                        <cleanup>try</cleanup>
                                        <noCache>true</noCache>
                                        <contextDir>${basedir}/target/docker-stage</contextDir>
                                        <dockerFile>Dockerfile</dockerFile>
                                        <tags>
                                            <tag>${project.docker.latestminortag.version}</tag>
                                            <tag>${project.docker.latestfulltag.version}</tag>
                                            <tag>${project.docker.latesttagtimestamp.version}</tag>
                                        </tags>
                                    </build>
                                </image>
                            </images>
                            <verbose>${docker.verbose}</verbose>
                            <skipPush>${docker.skip.push}</skipPush>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-push-images</id>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
