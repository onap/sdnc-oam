version: '2'
services:
  zookeeper:
    image: ${ZOOKEEPER_IMAGE}
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_REPLICAS: 1
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 5
      ZOOKEEPER_INIT_LIMIT: 10
      ZOOKEEPER_MAX_CLIENT_CNXNS: 200
      ZOOKEEPER_AUTOPURGE_SNAP_RETAIN_COUNT: 3
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: 24
      ZOOKEEPER_CLIENT_PORT: 2181
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/zookeeper/secrets/jaas/zk_server_jaas.conf -Dzookeeper.kerberos.removeHostFromPrincipal=true -Dzookeeper.kerberos.removeRealmFromPrincipal=true -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider -Dzookeeper.requireClientAuthScheme=sasl
      ZOOKEEPER_SERVER_ID:
    volumes:
      -  ./zk/zk_server_jaas.conf:/etc/zookeeper/secrets/jaas/zk_server_jaas.conf
    networks:
      integration:
        aliases:
        - zookeeper
        ipv4_address: ${ZOOKEEPER_IP}
  kafka:
    image: ${KAFKA_IMAGE}
    container_name: kafka
    ports:
     - "9092:9092"
    environment:
      enableCadi: 'false'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 40000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 40000
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_PLAINTEXT:PLAINTEXT,EXTERNAL_PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: INTERNAL_PLAINTEXT://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL_PLAINTEXT
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/secrets/jaas/zk_client_jaas.conf
      KAFKA_ZOOKEEPER_SET_ACL: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # Reduced the number of partitions only to avoid the timeout error for the first subscribe call in slow environment
      KAFKA_OFFSETS_TOPIC_NUM_PARTITIONS: 1
    volumes:
      -  ./kafka/zk_client_jaas.conf:/etc/kafka/secrets/jaas/zk_client_jaas.conf
    networks:
      integration:
        aliases:
        - kafka
        ipv4_address: ${KAFKA_IP}

    depends_on:
     - zookeeper
  onap-dmaap:
    container_name: onap-dmaap
    image: ${DMAAP_IMAGE}
    ports:
      - "3904:3904"
      - "3905:3905"
    environment:
      enableCadi: 'false'
    volumes:
      - ./mr/MsgRtrApi.properties:/appl/dmaapMR1/bundleconfig/etc/appprops/MsgRtrApi.properties
      - ./mr/logback.xml:/appl/dmaapMR1/bundleconfig/etc/logback.xml
      - ./mr/cadi.properties:/appl/dmaapMR1/etc/cadi.properties
    networks:
      integration:
        aliases:
        - dmaap
        ipv4_address: ${DMAAP_IP}

    depends_on:
      - zookeeper
      - kafka
  vesc:
    image: ${VESC_IMAGE}
    container_name: vescollector
    environment:
      DMAAPHOST: "dmaap"
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - ./vesc/collector.properties:/opt/app/VESCollector/etc/collector.properties
      - ./vesc/ves-dmaap-config.json:/opt/app/VESCollector/etc/ves-dmaap-config.json
      - ./vesc/externalRepo:/opt/app/VESCollector/etc/externalRepo

    networks:
      integration:
        ipv4_address: ${VESCOLLECTOR_IP}

networks:
  integration:
    name: ${NETWORK_NAME}
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: ${NETWORK_SUBNET}
