<!--
  ============LICENSE_START=======================================================
  openECOMP : SDN-C
  ================================================================================
  Copyright (C) 2017 AT&T Intellectual Property. All rights
  						reserved.
  ================================================================================
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
       http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  ============LICENSE_END=========================================================
  -->

<service-logic xmlns="http://www.openecomp.org/sdnc/svclogic"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.openecomp.org/sdnc/svclogic ./svclogic.xsd" module='VNF-API' version='${project.version}'><method rpc="preload-vnf-topology-operation" mode="sync"><block atomic="true"><record plugin="org.openecomp.sdnc.sli.recording.FileRecorder">
<parameter name="file" value="/opt/opendaylight/current/data/log/svclogic.log"/>
<parameter name="field1" value="__TIMESTAMP__"/>
<parameter name="field2" value="preload-vnf-topology-operation"/>
<parameter name="field3" value="`$preload-vnf-topology-operation-input.sdnc-request-header.svc-action`"/>
<parameter name="field4" value="`$preload-vnf-topology-operation-input.sdnc-request-header.svc-request-id`"/>
<parameter name="field5" value="`$preload-vnf-topology-operation-input.service-information.service-instance-id`"/>
<parameter name="field6" value="`$preload-vnf-topology-operation-input.request-information.request-id`"/>
<parameter name="field7" value="`$preload-vnf-topology-operation-input.request-information.request-action`"/>
<parameter name="field8" value="`$preload-vnf-topology-operation-input.request-information.source`"/>
<parameter name="field9" value="`$preload-vnf-topology-operation-input.vnf-topology-information.vnf-topology-identifier.service-type`"/>
<parameter name="field10" value="`$preload-vnf-topology-operation-input.vnf-topology-information.vnf-topology-identifier.vnf-name`"/>
<parameter name="field11" value="`$preload-vnf-topology-operation-input.vnf-topology-information.vnf-topology-identifier.vnf-type`"/></record><switch test="`$preload-vnf-topology-operation-input.request-information.request-action`">
<!--
leaf request-action {
                type enumeration {
                    enum "VNFActivateRequest";
                    enum "ChangeVNFActivateRequest";
                    enum "DisconnectVNFRequest";
                    enum "PreloadVNFRequest";
                    enum "DeletePreloadVNFRequest";
                }
}
-->

<outcome value='PreloadVNFRequest'><block atomic="true"><set>
<parameter name="ack-final" value="Y"/></set><set only-if-unset="true">
<parameter name="sql-resource-plugin" value="org.openecomp.sdnc.sli.resource.sql.SqlResource"/></set><get-resource plugin="`$sql-resource-plugin`" resource="vnf-profile" key="SELECT * from VNF_PROFILE WHERE vnf_type = $preload-vnf-topology-operation-input.vnf-topology-information.vnf-topology-identifier.vnf-type">
<outcome value='not-found'>
<return status='failure'>
    <parameter name="error-code" value="404" />
    <parameter name="error-message" value="preload vnf-type not found as valid vnf " /></return></outcome><outcome value='failure'>
<return status='failure'>
    <parameter name="error-code" value="404" />
    <parameter name="error-message" value="preload vnf-type not found as valid vnf " /></return></outcome></get-resource><set>
<parameter name="preload-data." value="" />
</set><set>
<parameter name="preload-data." value="preload-vnf-topology-operation-input." />
</set><set>
    <parameter name="preload-data.oper-status.order-status" value="PendingAssignment"/></set><return status="success">
    <parameter name="error-code" value="200" /></return></block></outcome><outcome value='DeletePreloadVNFRequest'><block atomic="true"><get-resource plugin="`$sql-resource-plugin`" resource="generic-vnf" key="SELECT * FROM VNF_PROFILE vnf-type = $preload-vnf-topology-operation-input.vnf-topology-information.vnf-topology-identifier.vnf-type">
<outcome value='success'>
<return status='failure'>
    <parameter name="error-code" value="3000" />
    <parameter name="error-message" value="preload vnf-type cannot be deleted while vnf is in use" /></return></outcome></get-resource><set>
<parameter name="preload-data." value="" />
</set><return status="success">
    <parameter name="error-code" value="200" /></return></block></outcome><outcome value="Other">

 <return status="failure">
    <parameter name='error-code' value='2000'/>
    <parameter name='error-message' value='Invalid Request `$preload-vnf-topology-operation-input.request-information.request-action`'/>


</return></outcome></switch></block></method></service-logic>
