<service-logic
    xmlns='http://www.onap.org/sdnc/svclogic'
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.onap.org/sdnc/svclogic ./svclogic.xsd' module='GENERIC-RESOURCE-API' version='${project.version}'>
    <method rpc='vf-module-topology-operation-assign' mode='sync'>
        <block atomic="true">
            <execute plugin='org.onap.ccsdk.sli.plugins.prop.PropertiesNode' method='readProperties' >
                <parameter name='fileName' value='%SDNC_CONFIG_DIR%/generic-resource-api-dg.properties' />
                <parameter name='contextPrefix' value='prop' />
            </execute>
            <switch test='`$vf-module-topology-operation-input.request-information.request-action`'>
                <outcome value='CreateVfModuleInstance'>
                    <block></block>
                </outcome>
                <outcome value='Other'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="If svc-action is 'assign' then request-action must be 'CreateVfModuleInstance'" />
                    </return>
                </outcome>
            </switch>
            <get-resource plugin='org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource' resource='SQL'
  key='SELECT * from VF_MODULE_MODEL WHERE customization_uuid = $vf-module-topology-operation-input.vf-module-information.onap-model-information.model-customization-uuid'
  pfx='db.vf-module-model'>
                <outcome value='failure'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="Error reading VF_MODULE_MODEL table" />
                    </return>
                </outcome>
                <outcome value='not-found'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="`'No model found for VF module customization UUID ' + $vf-module-topology-operation-input.vf-module-information.onap-model-information.model-customization-uuid`" />
                    </return>
                </outcome>
            </get-resource>
            <set>
                <parameter name='vnf-index' value='-1' />
            </set>
            <switch test='`$service-data.vnfs.vnf_length`'>
                <outcome value=''>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="There are no VNFs defined in MD-SAL" />
                    </return>
                </outcome>
                <outcome value='Other'>
                    <for index='idx' start='0' end='`$service-data.vnfs.vnf_length`' >
                        <switch test='`$service-data.vnfs.vnf[$idx].vnf-id == $vf-module-topology-operation-input.vnf-information.vnf-id`'>
                            <outcome value='true'>
                                <block>
                                    <set>
                                        <parameter name='vnf-index' value='`$idx`' />
                                    </set>
                                    <break/>
                                </block>
                            </outcome>
                        </switch>
                    </for>
                </outcome>
            </switch>
            <switch test='`$vnf-index`'>
                <outcome value='-1'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="`'Unable to find VNF ID ' + $vf-module-topology-operation-input.vnf-information.vnf-id + ' in MD-SAL'`" />
                    </return>
                </outcome>
            </switch>
            <block atomic="true">
                <set>
                    <parameter name='tmp.exist.sdnc-model-name' value='false' />
                    <parameter name='tmp.exist.vf_module_label' value='false' />
                </set>
                <switch test="`$vf-module-topology-operation-input.vf-module-request-input.vf-module-input-parameters.param_length`">
                    <outcome value=''>
                        <set>
                            <parameter name='vf-module-topology-operation-input.vf-module-request-input.vf-module-input-parameters.param_length' value='0' />
                        </set>
                    </outcome>
                </switch>
                <for silentFailure='true' index='p' start='0' end='`$vf-module-topology-operation-input.vf-module-request-input.vf-module-input-parameters.param_length`' >
                    <switch test="`$vf-module-topology-operation-input.vf-module-request-input.vf-module-input-parameters.param[$p].name`">
                        <outcome value='sdnc_model_name'>
                            <set>
                                <parameter name='tmp.exist.sdnc-model-name' value='true' />
                            </set>
                        </outcome>
                        <outcome value='vf_module_label'>
                            <set>
                                <parameter name='tmp.exist.vf_module_label' value='true' />
                            </set>
                        </outcome>
                    </switch>
                </for>
            </block>
            <switch test="`$tmp.exist.sdnc-model-name == 'true' and $tmp.exist.vf_module_label == 'true'`">
                <outcome value='true'>
                    <block atomic="true">
                        <call module='GENERIC-RESOURCE-API' rpc='self-serve-vf-module-assign' mode='sync' >
                            <outcome value='failure'>
                                <return status='failure'>
                                    <parameter name='ack-final' value='Y'/>
                                    <parameter name="error-code" value="500" />
                                    <parameter name="error-message" value="`'Failed to create self-serve assignment for vf-module with vf-module-id=' + $vf-module-topology-operation-input.vf-module-information.vf-module-id`" />
                                </return>
                            </outcome>
                        </call>
                        <set>
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.order-status'
  value='PendingCreate' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.last-rpc-action'
  value='`$vf-module-topology-operation-input.sdnc-request-header.svc-action`' />
                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.last-action'
  value='`$vf-module-topology-operation-input.sdnc-request-header.request-action`' />
                        </set>
                        <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='printContext' >
                            <parameter name='filename' value='/var/tmp/ss-vnfend.log' />
                        </execute>
                        <return status='success'>
                            <parameter name="ack-final-indicator" value="Y" />
                            <parameter name="error-code" value="200" />
                            <parameter name="error-message" value="`$error-message`" />
                        </return>
                    </block>
                </outcome>
                <outcome value='false'>
                    <get-resource plugin='org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource' resource='SQL'
  key='SELECT sdnc_model_name from VF_MODEL 
  	WHERE customization_uuid = $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-information.onap-model-information.model-customization-uuid 
  	AND sdnc_model_name is not null'
  pfx='db.vf-model-name'>
                        <outcome value='failure'>
                            <return status='failure'>
                                <parameter name='ack-final' value='Y'/>
                                <parameter name="error-code" value="500" />
                                <parameter name="error-message" value="Error reading VF_MODEL table" />
                            </return>
                        </outcome>
                        <outcome value='success'>
                            <get-resource plugin='org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource' resource='SQL'
  key='SELECT vf_module_label from VF_MODULE_MODEL 
  	WHERE vf_customization_uuid = $vf-module-topology-operation-input.vnf-information.onap-model-information.model-customization-uuid
  	AND vf_module_label is not null '
  pfx='db.vf-module-label'>
                                <outcome value='success'>
                                    <block atomic="true">
                                        <call module='GENERIC-RESOURCE-API' rpc='self-serve-vf-module-assign' mode='sync' >
                                            <outcome value='failure'>
                                                <return status='failure'>
                                                    <parameter name='ack-final' value='Y'/>
                                                    <parameter name="error-code" value="500" />
                                                    <parameter name="error-message" value="`'Failed to create self-serve assignment for vf-module with vf-module-id=' + $vf-module-topology-operation-input.vf-module-information.vf-module-id`" />
                                                </return>
                                            </outcome>
                                        </call>
                                        <set>
                                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.order-status'
  value='PendingCreate' />
                                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.last-rpc-action'
  value='`$vf-module-topology-operation-input.sdnc-request-header.svc-action`' />
                                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.last-action'
  value='`$vf-module-topology-operation-input.sdnc-request-header.request-action`' />
                                        </set>
                                        <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='printContext' >
                                            <parameter name='filename' value='/var/tmp/ss-vnfend.log' />
                                        </execute>
                                        <return status='success'>
                                            <parameter name="ack-final-indicator" value="Y" />
                                            <parameter name="error-code" value="200" />
                                            <parameter name="error-message" value="`$error-message`" />
                                        </return>
                                    </block>
                                </outcome>
                                <outcome value='failure'>
                                    <return status='failure'>
                                        <parameter name='ack-final' value='Y'/>
                                        <parameter name="error-code" value="500" />
                                        <parameter name="error-message" value="Error reading VF_MODULE_MODEL table" />
                                    </return>
                                </outcome>
                                <outcome value='not-found'>
                                    <block atomic="true">
                                        <block atomic="true">
                                            <switch test='`$vf-module-topology-operation-input.vf-module-request-input.vf-module-name`'>
                                                <outcome value=''>
                                                    <return status='failure'>
                                                        <parameter name='ack-final' value='Y'/>
                                                        <parameter name="error-code" value="500" />
                                                        <parameter name="error-message" value="vf-module-information.vf-module-request-input.vf-module-name is a required input" />
                                                    </return>
                                                </outcome>
                                            </switch>
                                            <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`'>
                                                <outcome value=''>
                                                    <set>
                                                        <parameter name='vf-module-index' value='0' />
                                                    </set>
                                                </outcome>
                                                <outcome value='Other'>
                                                    <block>
                                                        <set>
                                                            <parameter name='vf-module-index' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`' />
                                                        </set>
                                                        <for index='idx' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`' >
                                                            <switch test='`$vf-module-topology-operation-input.vf-module-information.vf-module-id == $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-id`'>
                                                                <outcome value='true'>
                                                                    <return status='failure'>
                                                                        <parameter name='ack-final' value='Y'/>
                                                                        <parameter name="error-code" value="500" />
                                                                        <parameter name="error-message" value="`'VF module id ' + $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-id
       + ' already exists, and status is ' + $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-level-oper-status.order-status`" />
                                                                    </return>
                                                                </outcome>
                                                            </switch>
                                                        </for>
                                                    </block>
                                                </outcome>
                                            </switch>
                                            <set>
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length' value='`$vf-module-index + 1`' />
                                            </set>
                                            <set>
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id'
   value='`$vf-module-topology-operation-input.vf-module-information.vf-module-id`' />
                                            </set>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.vf-module-topology-identifier.vf-module-id' value='`$vf-module-topology-operation-input.vf-module-information.vf-module-id`' />
                                                <parameter name='tmp.vf-module-topology.vf-module-topology-identifier.vf-module-name' value='`$vf-module-topology-operation-input.vf-module-request-input.vf-module-name`' />
                                                <parameter name='tmp.vf-module-topology.vf-module-topology-identifier.vf-module-type' value='`$vf-module-topology-operation-input.vf-module-information.vf-module-type`' />
                                                <parameter name='tmp.vf-module-topology.tenant' value='`$vf-module-topology-operation-input.vf-module-request-input.tenant`' />
                                                <parameter name='tmp.vf-module-topology.aic-cloud-region' value='`$vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region`' />
                                            </set>
                                            <get-resource plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
		resource="cloud-region" 
		key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner AND 
		     cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region"
        pfx='aai.cloud-region' local-only='false' >
                                                <outcome value='not-found'>
                                                    <return status='failure'>
                                                        <parameter name='ack-final' value='Y'/>
                                                        <parameter name="error-code" value="500" />
                                                        <parameter name="error-message" value="Cloud region not found in AAI" />
                                                    </return>
                                                </outcome>
                                                <outcome value='failure'>
                                                    <return status='failure'>
                                                        <parameter name='ack-final' value='Y'/>
                                                        <parameter name="error-code" value="500" />
                                                        <parameter name="error-message" value="Error retrieving cloud region from AAI" />
                                                    </return>
                                                </outcome>
                                            </get-resource>
                                            <for index='idx' start='0' end='`$aai.cloud-region.relationship-list.relationship_length`' >
                                                <switch test='`$aai.cloud-region.relationship-list.relationship[$idx].related-to`'>
                                                    <outcome value='complex'>
                                                        <block atomic="true">
                                                            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='split'>
                                                                <parameter name='ctx_memory_result_key' value='aai-uid-split' />
                                                                <parameter name='original_string' value='`$aai.cloud-region.relationship-list.relationship[$idx].related-link`' />
                                                                <parameter name='regex' value='/' />
                                                            </execute>
                                                            <set>
                                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.aic-clli'
   value='`$aai-uid-split[$aai-uid-split_length - 1]`' />
                                                            </set>
                                                            <break/>
                                                        </block>
                                                    </outcome>
                                                </switch>
                                            </for>
                                            <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.aic-clli`'>
                                                <outcome value=''>
                                                    <return status='failure'>
                                                        <parameter name='ack-final' value='Y'/>
                                                        <parameter name="error-code" value="500" />
                                                        <parameter name="error-message" value="`'Unable to find aic-clli in AAI for aic-cloud-region ' + $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region`" />
                                                    </return>
                                                </outcome>
                                            </switch>
                                            <switch test='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-invariant-uuid`'>
                                                <outcome value=''>
                                                    <set>
                                                        <parameter name='tmp.vf-module-topology.onap-model-information.model-invariant-uuid'
  value='`$db.vf-module-model.invariant-uuid`' />
                                                    </set>
                                                </outcome>
                                                <outcome value='Other'>
                                                    <set>
                                                        <parameter name='tmp.vf-module-topology.onap-model-information.model-invariant-uuid'
  value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-invariant-uuid`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-uuid`'>
                                                <outcome value=''>
                                                    <set>
                                                        <parameter name='tmp.vf-module-topology.onap-model-information.model-uuid'
  value='`$db.vf-module-model.uuid`' />
                                                    </set>
                                                </outcome>
                                                <outcome value='Other'>
                                                    <set>
                                                        <parameter name='tmp.vf-module-topology.onap-model-information.model-uuid'
  value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-uuid`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-version`'>
                                                <outcome value=''>
                                                    <set>
                                                        <parameter name='tmp.vf-module-topology.onap-model-information.model-version'
  value='`$db.vf-module-model.version`' />
                                                    </set>
                                                </outcome>
                                                <outcome value='Other'>
                                                    <set>
                                                        <parameter name='tmp.vf-module-topology.onap-model-information.model-version'
  value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-version`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <switch test='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-name`'>
                                                <outcome value=''>
                                                    <set>
                                                        <parameter name='tmp.vf-module-topology.onap-model-information.model-name'
  value='`$db.vf-module-model.name`' />
                                                    </set>
                                                </outcome>
                                                <outcome value='Other'>
                                                    <set>
                                                        <parameter name='tmp.vf-module-topology.onap-model-information.model-name'
  value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-name`' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.onap-model-information.model-customization-uuid'
  value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-customization-uuid`' />
                                            </set>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.vf-module-parameters.'
  value='vf-module-topology-operation-input.vf-module-request-input.vf-module-input-parameters.' />
                                            </set>
                                            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                                                <parameter name='restapiUrl' value="`$prop.controller.url + $prop.restapi.preloadinformation + $vf-module-topology-operation-input.vf-module-request-input.vf-module-name + '/vf-module'`" />
                                                <parameter name='restapiUser' value='`$prop.controller.user`' />
                                                <parameter name='restapiPassword' value='`$prop.controller.pwd`' />
                                                <parameter name='format' value='json' />
                                                <parameter name='httpMethod' value='GET' />
                                                <parameter name="responsePrefix" value="mdsal-preload" />
                                                <outcome value='failure'>
                                                    <block>
                                                        <switch test='`$mdsal-preload.response-code`'>
                                                            <outcome value='404'>
                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-operation-assign-no-preload' mode='sync' >
                                                                    <outcome value='failure'>
                                                                        <return status='failure'></return>
                                                                    </outcome>
                                                                </call>
                                                            </outcome>
                                                            <outcome value='Other'>
                                                                <return status='failure'>
                                                                    <parameter name='ack-final' value='Y'/>
                                                                    <parameter name="error-code" value="500" />
                                                                    <parameter name="error-message" value="Error retrieving preload-information" />
                                                                </return>
                                                            </outcome>
                                                        </switch>
                                                    </block>
                                                </outcome>
                                                <outcome value='success'>
                                                    <block>
                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-operation-assign-preload' mode='sync' >
                                                            <outcome value='failure'>
                                                                <return status='failure'></return>
                                                            </outcome>
                                                        </call>
                                                    </block>
                                                </outcome>
                                            </execute>
                                            <for silentFailure='true' index='vm-type-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm_length`' >
                                                <block atomic="true">
                                                    <for silentFailure='true' index='vnfc-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names_length`' >
                                                        <for silentFailure='true' index='network-role-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data_length`' >
                                                            <block>
                                                                <set>
                                                                    <parameter name='tmp.network-role' value='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-network-role`' />
                                                                </set>
                                                                <set>
                                                                    <parameter name='found-network-role' value='false' />
                                                                </set>
                                                                <for index='vnf-network-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network_length`' >
                                                                    <switch test='`$tmp.network-role
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].network-role`'>
                                                                        <outcome value='true'>
                                                                            <block>
                                                                                <set>
                                                                                    <parameter name='found-network-role' value='true' />
                                                                                </set>
                                                                                <break/>
                                                                            </block>
                                                                        </outcome>
                                                                    </switch>
                                                                </for>
                                                                <switch test='`$found-network-role`'>
                                                                    <outcome value='false'>
                                                                        <block atomic="true">
                                                                            <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                            <return status='failure'>
                                                                                <parameter name='ack-final' value='Y'/>
                                                                                <parameter name="error-code" value="500" />
                                                                                <parameter name="error-message"
      value="`'Cannot find VNF network role ' + $tmp.network-role`" />
                                                                            </return>
                                                                        </block>
                                                                    </outcome>
                                                                </switch>
                                                                <set>
                                                                    <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].network-id'
  value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].network-id`' />
                                                                </set>
                                                                <for index='subnet-role-index' start='0'
  end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet_length`' >
                                                                    <for index='address-family-index' start='0'
  end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments_length`' >
                                                                        <block atomic="true">
                                                                            <set>
                                                                                <parameter name='tmp.address-family'
  value='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-address-family`' />
                                                                                <parameter name='tmp.subnet-role'
  value='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-subnet-role`' />
                                                                            </set>
                                                                            <set>
                                                                                <parameter name='found-subnet' value='false' />
                                                                            </set>
                                                                            <for silentFailure='true' index='vnf-address-family-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data_length`' >
                                                                                <switch test='`$tmp.address-family
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].ip-version`'>
                                                                                    <outcome value='true'>
                                                                                        <switch test='`$tmp.subnet-role
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].subnet-role`'>
                                                                                            <outcome value='true'>
                                                                                                <block>
                                                                                                    <set>
                                                                                                        <parameter name='found-subnet' value='true' />
                                                                                                    </set>
                                                                                                    <break/>
                                                                                                </block>
                                                                                            </outcome>
                                                                                        </switch>
                                                                                    </outcome>
                                                                                </switch>
                                                                            </for>
                                                                            <switch test='`$found-subnet`'>
                                                                                <outcome value='false'>
                                                                                    <block atomic="true">
                                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                        <return status='failure'>
                                                                                            <parameter name='ack-final' value='Y'/>
                                                                                            <parameter name="error-code" value="500" />
                                                                                            <parameter name="error-message" value="`'Cannot find VNF address family '
      + $tmp.address-family
      + ' for subnet role '
      + $tmp.subnet-role`" />
                                                                                        </return>
                                                                                    </block>
                                                                                </outcome>
                                                                            </switch>
                                                                            <set>
                                                                                <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].subnet-id'
  value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].sdnc-subnet-id`' />
                                                                            </set>
                                                                        </block>
                                                                    </for>
                                                                </for>
                                                            </block>
                                                        </for>
                                                    </for>
                                                    <for silentFailure='true' index='vm-network-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network_length`' >
                                                        <block>
                                                            <set>
                                                                <parameter name='tmp.network-role' value='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].network-role`' />
                                                            </set>
                                                            <for index='vnf-network-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network_length`' >
                                                                <switch test='`$tmp.network-role
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].network-role`'>
                                                                    <outcome value='true'>
                                                                        <break/>
                                                                    </outcome>
                                                                </switch>
                                                            </for>
                                                            <switch test='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4_length &gt; 0`'>
                                                                <outcome value='true'>
                                                                    <block atomic="true">
                                                                        <set>
                                                                            <parameter name='tmp.address-family' value='ipv4' />
                                                                        </set>
                                                                        <set>
                                                                            <parameter name='found-address-family' value='false' />
                                                                        </set>
                                                                        <for silentFailure='true' index='vnf-address-family-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data_length`' >
                                                                            <switch test='`$tmp.address-family
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].ip-version`'>
                                                                                <outcome value='true'>
                                                                                    <block>
                                                                                        <set>
                                                                                            <parameter name='found-address-family' value='true' />
                                                                                        </set>
                                                                                        <break/>
                                                                                    </block>
                                                                                </outcome>
                                                                            </switch>
                                                                        </for>
                                                                        <switch test='`$found-address-family`'>
                                                                            <outcome value='false'>
                                                                                <block atomic="true">
                                                                                    <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                    <return status='failure'>
                                                                                        <parameter name='ack-final' value='Y'/>
                                                                                        <parameter name="error-code" value="500" />
                                                                                        <parameter name="error-message" value="`'Cannot find VNF address family '
      + $tmp.address-family
      + ' for network role '
      + $tmp.network-role`" />
                                                                                    </return>
                                                                                </block>
                                                                            </outcome>
                                                                        </switch>
                                                                        <set>
                                                                            <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.ipv4-subnet-id'
  value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].sdnc-subnet-id`' />
                                                                        </set>
                                                                    </block>
                                                                </outcome>
                                                            </switch>
                                                            <switch test='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6_length &gt; 0`'>
                                                                <outcome value='true'>
                                                                    <block atomic="true">
                                                                        <set>
                                                                            <parameter name='tmp.address-family' value='ipv6' />
                                                                        </set>
                                                                        <set>
                                                                            <parameter name='found-address-family' value='false' />
                                                                        </set>
                                                                        <for silentFailure='true' index='vnf-address-family-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data_length`' >
                                                                            <switch test='`$tmp.address-family
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].ip-version`'>
                                                                                <outcome value='true'>
                                                                                    <block>
                                                                                        <set>
                                                                                            <parameter name='found-address-family' value='true' />
                                                                                        </set>
                                                                                        <break/>
                                                                                    </block>
                                                                                </outcome>
                                                                            </switch>
                                                                        </for>
                                                                        <switch test='`$found-address-family`'>
                                                                            <outcome value='false'>
                                                                                <block atomic="true">
                                                                                    <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                    <return status='failure'>
                                                                                        <parameter name='ack-final' value='Y'/>
                                                                                        <parameter name="error-code" value="500" />
                                                                                        <parameter name="error-message" value="`'Cannot find VNF address family '
      + $tmp.address-family
      + ' for network role '
      + $tmp.network-role`" />
                                                                                    </return>
                                                                                </block>
                                                                            </outcome>
                                                                        </switch>
                                                                        <set>
                                                                            <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.ipv6-subnet-id'
  value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].sdnc-subnet-id`' />
                                                                        </set>
                                                                    </block>
                                                                </outcome>
                                                            </switch>
                                                        </block>
                                                    </for>
                                                </block>
                                            </for>
                                            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='printContext' >
                                                <parameter name='filename' value='/var/tmp/bgb-vfmoduleb.log' />
                                            </execute>
                                            <set>
                                                <parameter name='vf-module-object-path'
 value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'
 + $service-data.service-topology.service-topology-identifier.service-instance-id
 + '/service-data/vnfs/vnf/'
 + $service-data.vnfs.vnf[$vnf-index].vnf-id
 + '/vnf-data/vf-modules/vf-module/'
 + $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id
 + '/vf-module-data/vf-module-topology/'`"/>
                                            </set>
                                            <switch test='`$from-preload`'>
                                                <outcome value='false'>
                                                    <set>
                                                        <parameter name='automated-assignment' value='true' />
                                                    </set>
                                                </outcome>
                                                <outcome value='true'>
                                                    <set>
                                                        <parameter name='automated-assignment' value='false' />
                                                    </set>
                                                </outcome>
                                            </switch>
                                            <update plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vf-module"
   key="vf-module.vf-module-id = $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id
      AND generic-vnf.vnf-id = $service-data.vnfs.vnf[$vnf-index].vnf-id"
   force="true" pfx="tmp.AnAI-data">
                                                <parameter name="vf-module-name" value="`$tmp.vf-module-topology.vf-module-topology-identifier.vf-module-name`" />
                                                <parameter name="model-invariant-id" value="`$tmp.vf-module-topology.onap-model-information.model-invariant-uuid`" />
                                                <parameter name="model-version-id" value="`$tmp.vf-module-topology.onap-model-information.model-uuid`" />
                                                <parameter name="model-customization-id" value="`$tmp.vf-module-topology.onap-model-information.model-customization-uuid`" />
                                                <parameter name="selflink" value="`$vf-module-object-path`" />
                                                <parameter name="automated-assignment" value="`$automated-assignment`" />
                                                <outcome value='failure'>
                                                    <block atomic="true">
                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                        <return status='failure'>
                                                            <parameter name='ack-final' value='Y'/>
                                                            <parameter name="error-code" value="500" />
                                                            <parameter name="error-message" value="Error updating vf-module in AAI" />
                                                        </return>
                                                    </block>
                                                </outcome>
                                                <outcome value='not-found'>
                                                    <block atomic="true">
                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                        <return status='failure'>
                                                            <parameter name='ack-final' value='Y'/>
                                                            <parameter name="error-code" value="500" />
                                                            <parameter name="error-message" value="`'No vf-module found in AAI for vf module ID ' + $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id`" />
                                                        </return>
                                                    </block>
                                                </outcome>
                                            </update>
                                            <for silentFailure='true' index='vm-type-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm_length`' >
                                                <block atomic="true">
                                                    <for silentFailure='true' index='vnfc-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names_length`' >
                                                        <block atomic="true">
                                                            <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
	resource="vnfc" 
	key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name" >
                                                                <parameter name="vnfc-name" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name`" />
                                                                <parameter name="nfc-naming-code" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].nfc-naming-code`" />
                                                                <parameter name="nfc-function" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].nfc-function`" />
                                                                <parameter name="model-invariant-id" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].invariant-uuid`" />
                                                                <parameter name="model-version-id" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].uuid`" />
                                                                <parameter name="orchestration-status" value="`PendingCreate`" />
                                                                <parameter name="prov-status" value="`PREPROV`" />
                                                                <outcome value='failure'>
                                                                    <block atomic="true">
                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                        <return status='failure'>
                                                                            <parameter name='ack-final' value='Y'/>
                                                                            <parameter name="error-code" value="500" />
                                                                            <parameter name="error-message" value="Error saving vnfc to AAI" />
                                                                        </return>
                                                                    </block>
                                                                </outcome>
                                                                <outcome value='not-found'>
                                                                    <block atomic="true">
                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                        <return status='failure'>
                                                                            <parameter name='ack-final' value='Y'/>
                                                                            <parameter name="error-code" value="500" />
                                                                            <parameter name="error-message" value="Error saving vnfc to AAI" />
                                                                        </return>
                                                                    </block>
                                                                </outcome>
                                                            </save>
                                                            <set>
                                                                <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].created_flag' value='true' />
                                                            </set>
                                                            <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vnfc:relationship-list"
   key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name"
   force="true" pfx="tmp.AnAI-data">
                                                                <parameter name="relationship-list.relationship[0].related-to" value="generic-vnf" />
                                                                <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/generic-vnfs/generic-vnf/' +
        $vf-module-topology-operation-input.vnf-information.vnf-id`" />
                                                                <parameter name="relationship-list.relationship[1].related-to" value="vf-module" />
                                                                <parameter name="relationship-list.relationship[1].related-link"
      value="`'/aai/v$/network/generic-vnfs/generic-vnf/' +
        $vf-module-topology-operation-input.vnf-information.vnf-id +
        '/vf-modules/vf-module/' +
        $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id`" />
                                                                <outcome value='failure'>
                                                                    <block atomic="true">
                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                        <return status='failure'>
                                                                            <parameter name='ack-final' value='Y'/>
                                                                            <parameter name="error-code" value="500" />
                                                                            <parameter name="error-message" value="Error updating vnfc relationships in AAI" />
                                                                        </return>
                                                                    </block>
                                                                </outcome>
                                                                <outcome value='not-found'>
                                                                    <block atomic="true">
                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                        <return status='failure'>
                                                                            <parameter name='ack-final' value='Y'/>
                                                                            <parameter name="error-code" value="500" />
                                                                            <parameter name="error-message" value="Not-found error updating vnfc relationships" />
                                                                        </return>
                                                                    </block>
                                                                </outcome>
                                                            </save>
                                                            <for silentFailure='true' index='network-role-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data_length`' >
                                                                <for silentFailure='true' index='subnet-role-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet_length`' >
                                                                    <for silentFailure='true' index='address-family-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments_length`' >
                                                                        <block atomic="true">
                                                                            <set>
                                                                                <parameter name='tmp.address-family'
  value='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-address-family`' />
                                                                            </set>
                                                                            <for silentFailure='true' index='address-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip_length`' >
                                                                                <switch test='`$tmp.address-family`'>
                                                                                    <outcome value='ipv4'>
                                                                                        <block atomic="true">
                                                                                            <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
	resource="l3-interface-ipv4-address-list" 
	key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name
	  AND l3-interface-ipv4-address-list.l3-interface-ipv4-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address" >
                                                                                                <parameter name="l3-interface-ipv4-address" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address`" />
                                                                                                <parameter name="l3-interface-ipv4-prefix-length" value="32" />
                                                                                                <parameter name="is-floating" value="false" />
                                                                                                <outcome value='failure'>
                                                                                                    <block atomic="true">
                                                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                        <return status='failure'>
                                                                                                            <parameter name='ack-final' value='Y'/>
                                                                                                            <parameter name="error-code" value="500" />
                                                                                                            <parameter name="error-message" value="Error creating l3-interface-ipv4-address-list object in AAI" />
                                                                                                        </return>
                                                                                                    </block>
                                                                                                </outcome>
                                                                                            </save>
                                                                                            <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="l3-interface-ipv4-address-list:relationship-list"
   key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name
	  AND l3-interface-ipv4-address-list.l3-interface-ipv4-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address"
   force="true" pfx="tmp.AnAI-data">
                                                                                                <parameter name="relationship-list.relationship[0].related-to" value="l3-network" />
                                                                                                <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].network-id`" />
                                                                                                <parameter name="relationship-list.relationship[1].related-to" value="subnet" />
                                                                                                <parameter name="relationship-list.relationship[1].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].network-id +
        '/subnets/subnet/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].subnet-id`" />
                                                                                                <outcome value='failure'>
                                                                                                    <block atomic="true">
                                                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                        <return status='failure'>
                                                                                                            <parameter name='ack-final' value='Y'/>
                                                                                                            <parameter name="error-code" value="500" />
                                                                                                            <parameter name="error-message" value="Error updating l3-interface-ipv4-address-list relationships in AAI" />
                                                                                                        </return>
                                                                                                    </block>
                                                                                                </outcome>
                                                                                                <outcome value='not-found'>
                                                                                                    <block atomic="true">
                                                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                        <return status='failure'>
                                                                                                            <parameter name='ack-final' value='Y'/>
                                                                                                            <parameter name="error-code" value="500" />
                                                                                                            <parameter name="error-message" value="Not-found error updating l3-interface-ipv4-address-list relationships" />
                                                                                                        </return>
                                                                                                    </block>
                                                                                                </outcome>
                                                                                            </save>
                                                                                        </block>
                                                                                    </outcome>
                                                                                    <outcome value='ipv6'>
                                                                                        <block atomic="true">
                                                                                            <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
	resource="l3-interface-ipv6-address-list" 
	key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name
	  AND l3-interface-ipv6-address-list.l3-interface-ipv6-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address" >
                                                                                                <parameter name="l3-interface-ipv6-address" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address`" />
                                                                                                <parameter name="l3-interface-ipv6-prefix-length" value="128" />
                                                                                                <parameter name="is-floating" value="false" />
                                                                                                <outcome value='failure'>
                                                                                                    <block atomic="true">
                                                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                        <return status='failure'>
                                                                                                            <parameter name='ack-final' value='Y'/>
                                                                                                            <parameter name="error-code" value="500" />
                                                                                                            <parameter name="error-message" value="Error creating l3-interface-ipv6-address-list object in AAI" />
                                                                                                        </return>
                                                                                                    </block>
                                                                                                </outcome>
                                                                                            </save>
                                                                                            <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="l3-interface-ipv6-address-list:relationship-list"
   key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name
	  AND l3-interface-ipv6-address-list.l3-interface-ipv6-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address"
   force="true" pfx="tmp.AnAI-data">
                                                                                                <parameter name="relationship-list.relationship[0].related-to" value="l3-network" />
                                                                                                <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].network-id`" />
                                                                                                <parameter name="relationship-list.relationship[1].related-to" value="subnet" />
                                                                                                <parameter name="relationship-list.relationship[1].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].network-id +
        '/subnets/subnet/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].subnet-id`" />
                                                                                                <outcome value='failure'>
                                                                                                    <block atomic="true">
                                                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                        <return status='failure'>
                                                                                                            <parameter name='ack-final' value='Y'/>
                                                                                                            <parameter name="error-code" value="500" />
                                                                                                            <parameter name="error-message" value="Error updating l3-interface-ipv6-address-list relationships in AAI" />
                                                                                                        </return>
                                                                                                    </block>
                                                                                                </outcome>
                                                                                                <outcome value='not-found'>
                                                                                                    <block atomic="true">
                                                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                        <return status='failure'>
                                                                                                            <parameter name='ack-final' value='Y'/>
                                                                                                            <parameter name="error-code" value="500" />
                                                                                                            <parameter name="error-message" value="Not-found error updating l3-interface-ipv6-address-list relationships" />
                                                                                                        </return>
                                                                                                    </block>
                                                                                                </outcome>
                                                                                            </save>
                                                                                        </block>
                                                                                    </outcome>
                                                                                </switch>
                                                                            </for>
                                                                        </block>
                                                                    </for>
                                                                </for>
                                                            </for>
                                                        </block>
                                                    </for>
                                                    <for silentFailure='true' index='network-role-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network_length`' >
                                                        <block atomic="true">
                                                            <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vf-module:relationship-list"
   key="vf-module.vf-module-id = $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id
      AND generic-vnf.vnf-id = $service-data.vnfs.vnf[$vnf-index].vnf-id"
   force="true" pfx="tmp.AnAI-data">
                                                                <parameter name="relationship-list.relationship[0].related-to" value="l3-network" />
                                                                <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$network-role-index].network-id`" />
                                                                <outcome value='failure'>
                                                                    <block atomic="true">
                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                        <return status='failure'>
                                                                            <parameter name='ack-final' value='Y'/>
                                                                            <parameter name="error-code" value="500" />
                                                                            <parameter name="error-message" value="Error updating vf-module relationships in AAI" />
                                                                        </return>
                                                                    </block>
                                                                </outcome>
                                                                <outcome value='not-found'>
                                                                    <block atomic="true">
                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                        <return status='failure'>
                                                                            <parameter name='ack-final' value='Y'/>
                                                                            <parameter name="error-code" value="500" />
                                                                            <parameter name="error-message" value="`'No l3-network found in AAI for network ID '
      + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$network-role-index].network-id`" />
                                                                        </return>
                                                                    </block>
                                                                </outcome>
                                                            </save>
                                                            <set>
                                                                <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$network-role-index].created-flag' value='true' />
                                                            </set>
                                                            <for silentFailure='true' index='ipv4-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4_length`' >
                                                                <block atomic="true">
                                                                    <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
	resource="vip-ipv4-address-list" 
	key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner
	  AND cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region
	  AND vip-ipv4-address-list.vip-ipv4-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4[$ipv4-index]" >
                                                                        <parameter name="vip-ipv4-address" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4[$ipv4-index]`" />
                                                                        <parameter name="vip-ipv4-prefix-length" value="32" />
                                                                        <parameter name="is-floating" value="false" />
                                                                        <outcome value='failure'>
                                                                            <block atomic="true">
                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                <return status='failure'>
                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                    <parameter name="error-code" value="500" />
                                                                                    <parameter name="error-message" value="Error saving vip-ipv4-address-list in AAI" />
                                                                                </return>
                                                                            </block>
                                                                        </outcome>
                                                                        <outcome value='not-found'>
                                                                            <block atomic="true">
                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                <return status='failure'>
                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                    <parameter name="error-code" value="500" />
                                                                                    <parameter name="error-message" value="Not-found error saving vip-ipv4-address-list" />
                                                                                </return>
                                                                            </block>
                                                                        </outcome>
                                                                    </save>
                                                                    <set>
                                                                        <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.created-ipv4-flag' value='true' />
                                                                    </set>
                                                                    <for silentFailure='true' index='vnfc-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names_length`' >
                                                                        <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vip-ipv4-address-list:relationship-list"
   key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner
	  AND cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region
	  AND vip-ipv4-address-list.vip-ipv4-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4[$ipv4-index]"
   force="true" pfx="tmp.AnAI-data">
                                                                            <parameter name="relationship-list.relationship[0].related-to" value="subnet" />
                                                                            <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].network-id
        + '/subnets/subnet/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.ipv4-subnet-id`" />
                                                                            <parameter name="relationship-list.relationship[1].related-to" value="vnfc" />
                                                                            <parameter name="relationship-list.relationship[1].related-link"
      value="`'/aai/v$/network/vnfcs/vnfc/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name`" />
                                                                            <outcome value='failure'>
                                                                                <block atomic="true">
                                                                                    <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                    <return status='failure'>
                                                                                        <parameter name='ack-final' value='Y'/>
                                                                                        <parameter name="error-code" value="500" />
                                                                                        <parameter name="error-message" value="Error updating vip-ipv4-address-list relationships in AAI" />
                                                                                    </return>
                                                                                </block>
                                                                            </outcome>
                                                                            <outcome value='not-found'>
                                                                                <block atomic="true">
                                                                                    <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                    <return status='failure'>
                                                                                        <parameter name='ack-final' value='Y'/>
                                                                                        <parameter name="error-code" value="500" />
                                                                                        <parameter name="error-message" value="Not-found error updating vip-ipv4-address-list relationships" />
                                                                                    </return>
                                                                                </block>
                                                                            </outcome>
                                                                        </save>
                                                                    </for>
                                                                </block>
                                                            </for>
                                                            <for silentFailure='true' index='ipv6-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6_length`' >
                                                                <block atomic="true">
                                                                    <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
	resource="vip-ipv6-address-list" 
	key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner
	  AND cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region
	  AND vip-ipv6-address-list.vip-ipv6-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6[$ipv6-index]" >
                                                                        <parameter name="vip-ipv6-address" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6[$ipv6-index]`" />
                                                                        <parameter name="vip-ipv6-prefix-length" value="128" />
                                                                        <parameter name="is-floating" value="false" />
                                                                        <outcome value='failure'>
                                                                            <block atomic="true">
                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                <return status='failure'>
                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                    <parameter name="error-code" value="500" />
                                                                                    <parameter name="error-message" value="Error saving vip-ipv6-address-list in AAI" />
                                                                                </return>
                                                                            </block>
                                                                        </outcome>
                                                                        <outcome value='not-found'>
                                                                            <block atomic="true">
                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                <return status='failure'>
                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                    <parameter name="error-code" value="500" />
                                                                                    <parameter name="error-message" value="Not-found error saving vip-ipv6-address-list" />
                                                                                </return>
                                                                            </block>
                                                                        </outcome>
                                                                    </save>
                                                                    <set>
                                                                        <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.created-ipv6-flag' value='true' />
                                                                    </set>
                                                                    <for silentFailure='true' index='vnfc-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names_length`' >
                                                                        <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vip-ipv6-address-list:relationship-list"
   key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner
	  AND cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region
	  AND vip-ipv6-address-list.vip-ipv6-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6[$ipv6-index]"
   force="true" pfx="tmp.AnAI-data">
                                                                            <parameter name="relationship-list.relationship[0].related-to" value="subnet" />
                                                                            <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].network-id
        + '/subnets/subnet/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.ipv6-subnet-id`" />
                                                                            <parameter name="relationship-list.relationship[1].related-to" value="vnfc" />
                                                                            <parameter name="relationship-list.relationship[1].related-link"
      value="`'/aai/v$/network/vnfcs/vnfc/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name`" />
                                                                            <outcome value='failure'>
                                                                                <block atomic="true">
                                                                                    <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                    <return status='failure'>
                                                                                        <parameter name='ack-final' value='Y'/>
                                                                                        <parameter name="error-code" value="500" />
                                                                                        <parameter name="error-message" value="Error updating vip-ipv6-address-list relationships in AAI" />
                                                                                    </return>
                                                                                </block>
                                                                            </outcome>
                                                                            <outcome value='not-found'>
                                                                                <block atomic="true">
                                                                                    <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                    <return status='failure'>
                                                                                        <parameter name='ack-final' value='Y'/>
                                                                                        <parameter name="error-code" value="500" />
                                                                                        <parameter name="error-message" value="Not-found error updating vip-ipv6-address-list relationships" />
                                                                                    </return>
                                                                                </block>
                                                                            </outcome>
                                                                        </save>
                                                                    </for>
                                                                </block>
                                                            </for>
                                                        </block>
                                                    </for>
                                                </block>
                                            </for>
                                            <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-vlan-tagging-assign' mode='sync' >
                                                <outcome value='failure'>
                                                    <block atomic="true">
                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                        <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='printContext' >
                                                            <parameter name='filename' value='/var/tmp/bgb-vlantaggingfailure.log' />
                                                        </execute>
                                                        <return status='failure'></return>
                                                    </block>
                                                </outcome>
                                            </call>
                                            <for silentFailure='true' index='vm-type-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm_length`' >
                                                <for index='vm-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-count`' >
                                                    <block atomic="true">
                                                        <delete plugin='org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource' resource='SQL'
  key='DELETE from VIPR_CONFIGURATION WHERE vnf_id = $service-data.vnfs.vnf[$vnf-index].vnf-id
     AND ecomp_service_instance_id = $service-data.service-information.service-instance-id
     AND vm_name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vm-name[$vm-index]' >
                                                            <outcome value='failure'>
                                                                <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                                                                    <parameter name="logger" value="message-log"/>
                                                                    <parameter name="field1" value="__TIMESTAMP__"/>
                                                                    <parameter name="field2" value="GENERIC-RESOURCE-API.vf-module-topology-operation-assign:REQID"/>
                                                                    <parameter name="field3" value="`$vf-module-topology-operation-input.sdnc-request-header.svc-request-id`"/>
                                                                    <parameter name="field4" value="Failed to insert VIPR_CONFIGURATION record"/>
                                                                </record>
                                                            </outcome>
                                                        </delete>
                                                        <save plugin="org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource" resource="SQL"
key="INSERT INTO VIPR_CONFIGURATION (vnf_id, vnf_name, ecomp_service_instance_id, vm_name, cloud_region_id, cloud_owner) VALUES ( $service-data.vnfs.vnf[$vnf-index].vnf-id , $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-topology-identifier-structure.vnf-name , $service-data.service-information.service-instance-id , $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vm-name[$vm-index] , $tmp.vf-module-topology.aic-cloud-region , $prop.cloud-region.cloud-owner )" >
                                                            <outcome value='failure'>
                                                                <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                                                                    <parameter name="logger" value="message-log"/>
                                                                    <parameter name="field1" value="__TIMESTAMP__"/>
                                                                    <parameter name="field2" value="GENERIC-RESOURCE-API.vf-module-topology-operation-assign:REQID"/>
                                                                    <parameter name="field3" value="`$vf-module-topology-operation-input.sdnc-request-header.svc-request-id`"/>
                                                                    <parameter name="field4" value="Failed to insert VIPR_CONFIGURATION record"/>
                                                                </record>
                                                            </outcome>
                                                        </save>
                                                    </block>
                                                </for>
                                            </for>
                                            <set>
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.' value='tmp.vf-module-topology.' />
                                            </set>
                                            <set>
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.sdnc-request-header.'
   value='$vf-module-topology-operation-input.sdnc-request-header.' />
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.request-information.'
   value='$vf-module-topology-operation-input.request-information.' />
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.service-information.'
   value='$vf-module-topology-operation-input.service-information.' />
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vnf-information.'
   value='$vf-module-topology-operation-input.vnf-information.' />
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-information.'
   value='$vf-module-topology-operation-input.vf-module-information.' />
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-request-input.'
   value='$vf-module-topology-operation-input.vf-module-request-input.' />
                                            </set>
                                            <set>
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.order-status'
  value='PendingCreate' />
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.last-rpc-action'
  value='`$vf-module-topology-operation-input.sdnc-request-header.svc-action`' />
                                                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.last-action'
  value='`$vf-module-topology-operation-input.sdnc-request-header.request-action`' />
                                            </set>
                                            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='printContext' >
                                                <parameter name='filename' value='/var/tmp/bgb-vfmodule.log' />
                                            </execute>
                                            <return status='success'>
                                                <parameter name="ack-final-indicator" value="Y" />
                                                <parameter name="error-code" value="200" />
                                                <parameter name="error-message" value="`$error-message`" />
                                            </return>
                                        </block>
                                    </block>
                                </outcome>
                            </get-resource>
                        </outcome>
                        <outcome value='not-found'>
                            <block atomic="true">
                                <block atomic="true">
                                    <switch test='`$vf-module-topology-operation-input.vf-module-request-input.vf-module-name`'>
                                        <outcome value=''>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="vf-module-information.vf-module-request-input.vf-module-name is a required input" />
                                            </return>
                                        </outcome>
                                    </switch>
                                    <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`'>
                                        <outcome value=''>
                                            <set>
                                                <parameter name='vf-module-index' value='0' />
                                            </set>
                                        </outcome>
                                        <outcome value='Other'>
                                            <block>
                                                <set>
                                                    <parameter name='vf-module-index' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`' />
                                                </set>
                                                <for index='idx' start='0' end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`' >
                                                    <switch test='`$vf-module-topology-operation-input.vf-module-information.vf-module-id == $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-id`'>
                                                        <outcome value='true'>
                                                            <return status='failure'>
                                                                <parameter name='ack-final' value='Y'/>
                                                                <parameter name="error-code" value="500" />
                                                                <parameter name="error-message" value="`'VF module id ' + $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-id
       + ' already exists, and status is ' + $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-data.vf-module-level-oper-status.order-status`" />
                                                            </return>
                                                        </outcome>
                                                    </switch>
                                                </for>
                                            </block>
                                        </outcome>
                                    </switch>
                                    <set>
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length' value='`$vf-module-index + 1`' />
                                    </set>
                                    <set>
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id'
   value='`$vf-module-topology-operation-input.vf-module-information.vf-module-id`' />
                                    </set>
                                    <set>
                                        <parameter name='tmp.vf-module-topology.vf-module-topology-identifier.vf-module-id' value='`$vf-module-topology-operation-input.vf-module-information.vf-module-id`' />
                                        <parameter name='tmp.vf-module-topology.vf-module-topology-identifier.vf-module-name' value='`$vf-module-topology-operation-input.vf-module-request-input.vf-module-name`' />
                                        <parameter name='tmp.vf-module-topology.vf-module-topology-identifier.vf-module-type' value='`$vf-module-topology-operation-input.vf-module-information.vf-module-type`' />
                                        <parameter name='tmp.vf-module-topology.tenant' value='`$vf-module-topology-operation-input.vf-module-request-input.tenant`' />
                                        <parameter name='tmp.vf-module-topology.aic-cloud-region' value='`$vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region`' />
                                    </set>
                                    <get-resource plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
		resource="cloud-region" 
		key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner AND 
		     cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region"
        pfx='aai.cloud-region' local-only='false' >
                                        <outcome value='not-found'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="Cloud region not found in AAI" />
                                            </return>
                                        </outcome>
                                        <outcome value='failure'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="Error retrieving cloud region from AAI" />
                                            </return>
                                        </outcome>
                                    </get-resource>
                                    <for index='idx' start='0' end='`$aai.cloud-region.relationship-list.relationship_length`' >
                                        <switch test='`$aai.cloud-region.relationship-list.relationship[$idx].related-to`'>
                                            <outcome value='complex'>
                                                <block atomic="true">
                                                    <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='split'>
                                                        <parameter name='ctx_memory_result_key' value='aai-uid-split' />
                                                        <parameter name='original_string' value='`$aai.cloud-region.relationship-list.relationship[$idx].related-link`' />
                                                        <parameter name='regex' value='/' />
                                                    </execute>
                                                    <set>
                                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.aic-clli'
   value='`$aai-uid-split[$aai-uid-split_length - 1]`' />
                                                    </set>
                                                    <break/>
                                                </block>
                                            </outcome>
                                        </switch>
                                    </for>
                                    <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.aic-clli`'>
                                        <outcome value=''>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="`'Unable to find aic-clli in AAI for aic-cloud-region ' + $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region`" />
                                            </return>
                                        </outcome>
                                    </switch>
                                    <switch test='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-invariant-uuid`'>
                                        <outcome value=''>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.onap-model-information.model-invariant-uuid'
  value='`$db.vf-module-model.invariant-uuid`' />
                                            </set>
                                        </outcome>
                                        <outcome value='Other'>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.onap-model-information.model-invariant-uuid'
  value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-invariant-uuid`' />
                                            </set>
                                        </outcome>
                                    </switch>
                                    <switch test='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-uuid`'>
                                        <outcome value=''>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.onap-model-information.model-uuid'
  value='`$db.vf-module-model.uuid`' />
                                            </set>
                                        </outcome>
                                        <outcome value='Other'>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.onap-model-information.model-uuid'
  value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-uuid`' />
                                            </set>
                                        </outcome>
                                    </switch>
                                    <switch test='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-version`'>
                                        <outcome value=''>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.onap-model-information.model-version'
  value='`$db.vf-module-model.version`' />
                                            </set>
                                        </outcome>
                                        <outcome value='Other'>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.onap-model-information.model-version'
  value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-version`' />
                                            </set>
                                        </outcome>
                                    </switch>
                                    <switch test='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-name`'>
                                        <outcome value=''>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.onap-model-information.model-name'
  value='`$db.vf-module-model.name`' />
                                            </set>
                                        </outcome>
                                        <outcome value='Other'>
                                            <set>
                                                <parameter name='tmp.vf-module-topology.onap-model-information.model-name'
  value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-name`' />
                                            </set>
                                        </outcome>
                                    </switch>
                                    <set>
                                        <parameter name='tmp.vf-module-topology.onap-model-information.model-customization-uuid'
  value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-customization-uuid`' />
                                    </set>
                                    <set>
                                        <parameter name='tmp.vf-module-topology.vf-module-parameters.'
  value='vf-module-topology-operation-input.vf-module-request-input.vf-module-input-parameters.' />
                                    </set>
                                    <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                                        <parameter name='restapiUrl' value="`$prop.controller.url + $prop.restapi.preloadinformation + $vf-module-topology-operation-input.vf-module-request-input.vf-module-name + '/vf-module'`" />
                                        <parameter name='restapiUser' value='`$prop.controller.user`' />
                                        <parameter name='restapiPassword' value='`$prop.controller.pwd`' />
                                        <parameter name='format' value='json' />
                                        <parameter name='httpMethod' value='GET' />
                                        <parameter name="responsePrefix" value="mdsal-preload" />
                                        <outcome value='failure'>
                                            <block>
                                                <switch test='`$mdsal-preload.response-code`'>
                                                    <outcome value='404'>
                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-operation-assign-no-preload' mode='sync' >
                                                            <outcome value='failure'>
                                                                <return status='failure'></return>
                                                            </outcome>
                                                        </call>
                                                    </outcome>
                                                    <outcome value='Other'>
                                                        <return status='failure'>
                                                            <parameter name='ack-final' value='Y'/>
                                                            <parameter name="error-code" value="500" />
                                                            <parameter name="error-message" value="Error retrieving preload-information" />
                                                        </return>
                                                    </outcome>
                                                </switch>
                                            </block>
                                        </outcome>
                                        <outcome value='success'>
                                            <block>
                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-operation-assign-preload' mode='sync' >
                                                    <outcome value='failure'>
                                                        <return status='failure'></return>
                                                    </outcome>
                                                </call>
                                            </block>
                                        </outcome>
                                    </execute>
                                    <for silentFailure='true' index='vm-type-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm_length`' >
                                        <block atomic="true">
                                            <for silentFailure='true' index='vnfc-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names_length`' >
                                                <for silentFailure='true' index='network-role-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data_length`' >
                                                    <block>
                                                        <set>
                                                            <parameter name='tmp.network-role' value='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-network-role`' />
                                                        </set>
                                                        <set>
                                                            <parameter name='found-network-role' value='false' />
                                                        </set>
                                                        <for index='vnf-network-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network_length`' >
                                                            <switch test='`$tmp.network-role
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].network-role`'>
                                                                <outcome value='true'>
                                                                    <block>
                                                                        <set>
                                                                            <parameter name='found-network-role' value='true' />
                                                                        </set>
                                                                        <break/>
                                                                    </block>
                                                                </outcome>
                                                            </switch>
                                                        </for>
                                                        <switch test='`$found-network-role`'>
                                                            <outcome value='false'>
                                                                <block atomic="true">
                                                                    <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                    <return status='failure'>
                                                                        <parameter name='ack-final' value='Y'/>
                                                                        <parameter name="error-code" value="500" />
                                                                        <parameter name="error-message"
      value="`'Cannot find VNF network role ' + $tmp.network-role`" />
                                                                    </return>
                                                                </block>
                                                            </outcome>
                                                        </switch>
                                                        <set>
                                                            <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].network-id'
  value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].network-id`' />
                                                        </set>
                                                        <for index='subnet-role-index' start='0'
  end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet_length`' >
                                                            <for index='address-family-index' start='0'
  end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments_length`' >
                                                                <block atomic="true">
                                                                    <set>
                                                                        <parameter name='tmp.address-family'
  value='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-address-family`' />
                                                                        <parameter name='tmp.subnet-role'
  value='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-subnet-role`' />
                                                                    </set>
                                                                    <set>
                                                                        <parameter name='found-subnet' value='false' />
                                                                    </set>
                                                                    <for silentFailure='true' index='vnf-address-family-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data_length`' >
                                                                        <switch test='`$tmp.address-family
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].ip-version`'>
                                                                            <outcome value='true'>
                                                                                <switch test='`$tmp.subnet-role
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].subnet-role`'>
                                                                                    <outcome value='true'>
                                                                                        <block>
                                                                                            <set>
                                                                                                <parameter name='found-subnet' value='true' />
                                                                                            </set>
                                                                                            <break/>
                                                                                        </block>
                                                                                    </outcome>
                                                                                </switch>
                                                                            </outcome>
                                                                        </switch>
                                                                    </for>
                                                                    <switch test='`$found-subnet`'>
                                                                        <outcome value='false'>
                                                                            <block atomic="true">
                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                <return status='failure'>
                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                    <parameter name="error-code" value="500" />
                                                                                    <parameter name="error-message" value="`'Cannot find VNF address family '
      + $tmp.address-family
      + ' for subnet role '
      + $tmp.subnet-role`" />
                                                                                </return>
                                                                            </block>
                                                                        </outcome>
                                                                    </switch>
                                                                    <set>
                                                                        <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].subnet-id'
  value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].sdnc-subnet-id`' />
                                                                    </set>
                                                                </block>
                                                            </for>
                                                        </for>
                                                    </block>
                                                </for>
                                            </for>
                                            <for silentFailure='true' index='vm-network-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network_length`' >
                                                <block>
                                                    <set>
                                                        <parameter name='tmp.network-role' value='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].network-role`' />
                                                    </set>
                                                    <for index='vnf-network-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network_length`' >
                                                        <switch test='`$tmp.network-role
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].network-role`'>
                                                            <outcome value='true'>
                                                                <break/>
                                                            </outcome>
                                                        </switch>
                                                    </for>
                                                    <switch test='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4_length &gt; 0`'>
                                                        <outcome value='true'>
                                                            <block atomic="true">
                                                                <set>
                                                                    <parameter name='tmp.address-family' value='ipv4' />
                                                                </set>
                                                                <set>
                                                                    <parameter name='found-address-family' value='false' />
                                                                </set>
                                                                <for silentFailure='true' index='vnf-address-family-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data_length`' >
                                                                    <switch test='`$tmp.address-family
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].ip-version`'>
                                                                        <outcome value='true'>
                                                                            <block>
                                                                                <set>
                                                                                    <parameter name='found-address-family' value='true' />
                                                                                </set>
                                                                                <break/>
                                                                            </block>
                                                                        </outcome>
                                                                    </switch>
                                                                </for>
                                                                <switch test='`$found-address-family`'>
                                                                    <outcome value='false'>
                                                                        <block atomic="true">
                                                                            <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                            <return status='failure'>
                                                                                <parameter name='ack-final' value='Y'/>
                                                                                <parameter name="error-code" value="500" />
                                                                                <parameter name="error-message" value="`'Cannot find VNF address family '
      + $tmp.address-family
      + ' for network role '
      + $tmp.network-role`" />
                                                                            </return>
                                                                        </block>
                                                                    </outcome>
                                                                </switch>
                                                                <set>
                                                                    <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.ipv4-subnet-id'
  value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].sdnc-subnet-id`' />
                                                                </set>
                                                            </block>
                                                        </outcome>
                                                    </switch>
                                                    <switch test='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6_length &gt; 0`'>
                                                        <outcome value='true'>
                                                            <block atomic="true">
                                                                <set>
                                                                    <parameter name='tmp.address-family' value='ipv6' />
                                                                </set>
                                                                <set>
                                                                    <parameter name='found-address-family' value='false' />
                                                                </set>
                                                                <for silentFailure='true' index='vnf-address-family-index' start='0'
  end='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data_length`' >
                                                                    <switch test='`$tmp.address-family
  == $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].ip-version`'>
                                                                        <outcome value='true'>
                                                                            <block>
                                                                                <set>
                                                                                    <parameter name='found-address-family' value='true' />
                                                                                </set>
                                                                                <break/>
                                                                            </block>
                                                                        </outcome>
                                                                    </switch>
                                                                </for>
                                                                <switch test='`$found-address-family`'>
                                                                    <outcome value='false'>
                                                                        <block atomic="true">
                                                                            <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                            <return status='failure'>
                                                                                <parameter name='ack-final' value='Y'/>
                                                                                <parameter name="error-code" value="500" />
                                                                                <parameter name="error-message" value="`'Cannot find VNF address family '
      + $tmp.address-family
      + ' for network role '
      + $tmp.network-role`" />
                                                                            </return>
                                                                        </block>
                                                                    </outcome>
                                                                </switch>
                                                                <set>
                                                                    <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.ipv6-subnet-id'
  value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-resource-assignments.vnf-networks.vnf-network[$vnf-network-index].subnets-data.subnet-data[$vnf-address-family-index].sdnc-subnet-id`' />
                                                                </set>
                                                            </block>
                                                        </outcome>
                                                    </switch>
                                                </block>
                                            </for>
                                        </block>
                                    </for>
                                    <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='printContext' >
                                        <parameter name='filename' value='/var/tmp/bgb-vfmoduleb.log' />
                                    </execute>
                                    <set>
                                        <parameter name='vf-module-object-path'
 value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'
 + $service-data.service-topology.service-topology-identifier.service-instance-id
 + '/service-data/vnfs/vnf/'
 + $service-data.vnfs.vnf[$vnf-index].vnf-id
 + '/vnf-data/vf-modules/vf-module/'
 + $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id
 + '/vf-module-data/vf-module-topology/'`"/>
                                    </set>
                                    <switch test='`$from-preload`'>
                                        <outcome value='false'>
                                            <set>
                                                <parameter name='automated-assignment' value='true' />
                                            </set>
                                        </outcome>
                                        <outcome value='true'>
                                            <set>
                                                <parameter name='automated-assignment' value='false' />
                                            </set>
                                        </outcome>
                                    </switch>
                                    <update plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vf-module"
   key="vf-module.vf-module-id = $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id
      AND generic-vnf.vnf-id = $service-data.vnfs.vnf[$vnf-index].vnf-id"
   force="true" pfx="tmp.AnAI-data">
                                        <parameter name="vf-module-name" value="`$tmp.vf-module-topology.vf-module-topology-identifier.vf-module-name`" />
                                        <parameter name="model-invariant-id" value="`$tmp.vf-module-topology.onap-model-information.model-invariant-uuid`" />
                                        <parameter name="model-version-id" value="`$tmp.vf-module-topology.onap-model-information.model-uuid`" />
                                        <parameter name="model-customization-id" value="`$tmp.vf-module-topology.onap-model-information.model-customization-uuid`" />
                                        <parameter name="selflink" value="`$vf-module-object-path`" />
                                        <parameter name="automated-assignment" value="`$automated-assignment`" />
                                        <outcome value='failure'>
                                            <block atomic="true">
                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                <return status='failure'>
                                                    <parameter name='ack-final' value='Y'/>
                                                    <parameter name="error-code" value="500" />
                                                    <parameter name="error-message" value="Error updating vf-module in AAI" />
                                                </return>
                                            </block>
                                        </outcome>
                                        <outcome value='not-found'>
                                            <block atomic="true">
                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                <return status='failure'>
                                                    <parameter name='ack-final' value='Y'/>
                                                    <parameter name="error-code" value="500" />
                                                    <parameter name="error-message" value="`'No vf-module found in AAI for vf module ID ' + $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id`" />
                                                </return>
                                            </block>
                                        </outcome>
                                    </update>
                                    <for silentFailure='true' index='vm-type-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm_length`' >
                                        <block atomic="true">
                                            <for silentFailure='true' index='vnfc-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names_length`' >
                                                <block atomic="true">
                                                    <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
	resource="vnfc" 
	key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name" >
                                                        <parameter name="vnfc-name" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name`" />
                                                        <parameter name="nfc-naming-code" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].nfc-naming-code`" />
                                                        <parameter name="nfc-function" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].nfc-function`" />
                                                        <parameter name="model-invariant-id" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].invariant-uuid`" />
                                                        <parameter name="model-version-id" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].uuid`" />
                                                        <parameter name="orchestration-status" value="`PendingCreate`" />
                                                        <parameter name="prov-status" value="`PREPROV`" />
                                                        <outcome value='failure'>
                                                            <block atomic="true">
                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                <return status='failure'>
                                                                    <parameter name='ack-final' value='Y'/>
                                                                    <parameter name="error-code" value="500" />
                                                                    <parameter name="error-message" value="Error saving vnfc to AAI" />
                                                                </return>
                                                            </block>
                                                        </outcome>
                                                        <outcome value='not-found'>
                                                            <block atomic="true">
                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                <return status='failure'>
                                                                    <parameter name='ack-final' value='Y'/>
                                                                    <parameter name="error-code" value="500" />
                                                                    <parameter name="error-message" value="Error saving vnfc to AAI" />
                                                                </return>
                                                            </block>
                                                        </outcome>
                                                    </save>
                                                    <set>
                                                        <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].created_flag' value='true' />
                                                    </set>
                                                    <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vnfc:relationship-list"
   key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name"
   force="true" pfx="tmp.AnAI-data">
                                                        <parameter name="relationship-list.relationship[0].related-to" value="generic-vnf" />
                                                        <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/generic-vnfs/generic-vnf/' +
        $vf-module-topology-operation-input.vnf-information.vnf-id`" />
                                                        <parameter name="relationship-list.relationship[1].related-to" value="vf-module" />
                                                        <parameter name="relationship-list.relationship[1].related-link"
      value="`'/aai/v$/network/generic-vnfs/generic-vnf/' +
        $vf-module-topology-operation-input.vnf-information.vnf-id +
        '/vf-modules/vf-module/' +
        $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id`" />
                                                        <outcome value='failure'>
                                                            <block atomic="true">
                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                <return status='failure'>
                                                                    <parameter name='ack-final' value='Y'/>
                                                                    <parameter name="error-code" value="500" />
                                                                    <parameter name="error-message" value="Error updating vnfc relationships in AAI" />
                                                                </return>
                                                            </block>
                                                        </outcome>
                                                        <outcome value='not-found'>
                                                            <block atomic="true">
                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                <return status='failure'>
                                                                    <parameter name='ack-final' value='Y'/>
                                                                    <parameter name="error-code" value="500" />
                                                                    <parameter name="error-message" value="Not-found error updating vnfc relationships" />
                                                                </return>
                                                            </block>
                                                        </outcome>
                                                    </save>
                                                    <for silentFailure='true' index='network-role-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data_length`' >
                                                        <for silentFailure='true' index='subnet-role-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet_length`' >
                                                            <for silentFailure='true' index='address-family-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments_length`' >
                                                                <block atomic="true">
                                                                    <set>
                                                                        <parameter name='tmp.address-family'
  value='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-address-family`' />
                                                                    </set>
                                                                    <for silentFailure='true' index='address-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip_length`' >
                                                                        <switch test='`$tmp.address-family`'>
                                                                            <outcome value='ipv4'>
                                                                                <block atomic="true">
                                                                                    <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
	resource="l3-interface-ipv4-address-list" 
	key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name
	  AND l3-interface-ipv4-address-list.l3-interface-ipv4-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address" >
                                                                                        <parameter name="l3-interface-ipv4-address" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address`" />
                                                                                        <parameter name="l3-interface-ipv4-prefix-length" value="32" />
                                                                                        <parameter name="is-floating" value="false" />
                                                                                        <outcome value='failure'>
                                                                                            <block atomic="true">
                                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                <return status='failure'>
                                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                                    <parameter name="error-code" value="500" />
                                                                                                    <parameter name="error-message" value="Error creating l3-interface-ipv4-address-list object in AAI" />
                                                                                                </return>
                                                                                            </block>
                                                                                        </outcome>
                                                                                    </save>
                                                                                    <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="l3-interface-ipv4-address-list:relationship-list"
   key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name
	  AND l3-interface-ipv4-address-list.l3-interface-ipv4-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address"
   force="true" pfx="tmp.AnAI-data">
                                                                                        <parameter name="relationship-list.relationship[0].related-to" value="l3-network" />
                                                                                        <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].network-id`" />
                                                                                        <parameter name="relationship-list.relationship[1].related-to" value="subnet" />
                                                                                        <parameter name="relationship-list.relationship[1].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].network-id +
        '/subnets/subnet/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].subnet-id`" />
                                                                                        <outcome value='failure'>
                                                                                            <block atomic="true">
                                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                <return status='failure'>
                                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                                    <parameter name="error-code" value="500" />
                                                                                                    <parameter name="error-message" value="Error updating l3-interface-ipv4-address-list relationships in AAI" />
                                                                                                </return>
                                                                                            </block>
                                                                                        </outcome>
                                                                                        <outcome value='not-found'>
                                                                                            <block atomic="true">
                                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                <return status='failure'>
                                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                                    <parameter name="error-code" value="500" />
                                                                                                    <parameter name="error-message" value="Not-found error updating l3-interface-ipv4-address-list relationships" />
                                                                                                </return>
                                                                                            </block>
                                                                                        </outcome>
                                                                                    </save>
                                                                                </block>
                                                                            </outcome>
                                                                            <outcome value='ipv6'>
                                                                                <block atomic="true">
                                                                                    <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
	resource="l3-interface-ipv6-address-list" 
	key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name
	  AND l3-interface-ipv6-address-list.l3-interface-ipv6-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address" >
                                                                                        <parameter name="l3-interface-ipv6-address" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address`" />
                                                                                        <parameter name="l3-interface-ipv6-prefix-length" value="128" />
                                                                                        <parameter name="is-floating" value="false" />
                                                                                        <outcome value='failure'>
                                                                                            <block atomic="true">
                                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                <return status='failure'>
                                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                                    <parameter name="error-code" value="500" />
                                                                                                    <parameter name="error-message" value="Error creating l3-interface-ipv6-address-list object in AAI" />
                                                                                                </return>
                                                                                            </block>
                                                                                        </outcome>
                                                                                    </save>
                                                                                    <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="l3-interface-ipv6-address-list:relationship-list"
   key="vnfc.vnfc-name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name
	  AND l3-interface-ipv6-address-list.l3-interface-ipv6-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].vnfc-subnet-ip[$address-index].vnfc-ip-address"
   force="true" pfx="tmp.AnAI-data">
                                                                                        <parameter name="relationship-list.relationship[0].related-to" value="l3-network" />
                                                                                        <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].network-id`" />
                                                                                        <parameter name="relationship-list.relationship[1].related-to" value="subnet" />
                                                                                        <parameter name="relationship-list.relationship[1].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].network-id +
        '/subnets/subnet/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-networks.vnfc-network-data[$network-role-index].vnfc-subnet[$subnet-role-index].vnfc-ip-assignments[$address-family-index].subnet-id`" />
                                                                                        <outcome value='failure'>
                                                                                            <block atomic="true">
                                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                <return status='failure'>
                                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                                    <parameter name="error-code" value="500" />
                                                                                                    <parameter name="error-message" value="Error updating l3-interface-ipv6-address-list relationships in AAI" />
                                                                                                </return>
                                                                                            </block>
                                                                                        </outcome>
                                                                                        <outcome value='not-found'>
                                                                                            <block atomic="true">
                                                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                                                <return status='failure'>
                                                                                                    <parameter name='ack-final' value='Y'/>
                                                                                                    <parameter name="error-code" value="500" />
                                                                                                    <parameter name="error-message" value="Not-found error updating l3-interface-ipv6-address-list relationships" />
                                                                                                </return>
                                                                                            </block>
                                                                                        </outcome>
                                                                                    </save>
                                                                                </block>
                                                                            </outcome>
                                                                        </switch>
                                                                    </for>
                                                                </block>
                                                            </for>
                                                        </for>
                                                    </for>
                                                </block>
                                            </for>
                                            <for silentFailure='true' index='network-role-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network_length`' >
                                                <block atomic="true">
                                                    <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vf-module:relationship-list"
   key="vf-module.vf-module-id = $service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-id
      AND generic-vnf.vnf-id = $service-data.vnfs.vnf[$vnf-index].vnf-id"
   force="true" pfx="tmp.AnAI-data">
                                                        <parameter name="relationship-list.relationship[0].related-to" value="l3-network" />
                                                        <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/' +
        $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$network-role-index].network-id`" />
                                                        <outcome value='failure'>
                                                            <block atomic="true">
                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                <return status='failure'>
                                                                    <parameter name='ack-final' value='Y'/>
                                                                    <parameter name="error-code" value="500" />
                                                                    <parameter name="error-message" value="Error updating vf-module relationships in AAI" />
                                                                </return>
                                                            </block>
                                                        </outcome>
                                                        <outcome value='not-found'>
                                                            <block atomic="true">
                                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                <return status='failure'>
                                                                    <parameter name='ack-final' value='Y'/>
                                                                    <parameter name="error-code" value="500" />
                                                                    <parameter name="error-message" value="`'No l3-network found in AAI for network ID '
      + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$network-role-index].network-id`" />
                                                                </return>
                                                            </block>
                                                        </outcome>
                                                    </save>
                                                    <set>
                                                        <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$network-role-index].created-flag' value='true' />
                                                    </set>
                                                    <for silentFailure='true' index='ipv4-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4_length`' >
                                                        <block atomic="true">
                                                            <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
	resource="vip-ipv4-address-list" 
	key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner
	  AND cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region
	  AND vip-ipv4-address-list.vip-ipv4-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4[$ipv4-index]" >
                                                                <parameter name="vip-ipv4-address" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4[$ipv4-index]`" />
                                                                <parameter name="vip-ipv4-prefix-length" value="32" />
                                                                <parameter name="is-floating" value="false" />
                                                                <outcome value='failure'>
                                                                    <block atomic="true">
                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                        <return status='failure'>
                                                                            <parameter name='ack-final' value='Y'/>
                                                                            <parameter name="error-code" value="500" />
                                                                            <parameter name="error-message" value="Error saving vip-ipv4-address-list in AAI" />
                                                                        </return>
                                                                    </block>
                                                                </outcome>
                                                                <outcome value='not-found'>
                                                                    <block atomic="true">
                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                        <return status='failure'>
                                                                            <parameter name='ack-final' value='Y'/>
                                                                            <parameter name="error-code" value="500" />
                                                                            <parameter name="error-message" value="Not-found error saving vip-ipv4-address-list" />
                                                                        </return>
                                                                    </block>
                                                                </outcome>
                                                            </save>
                                                            <set>
                                                                <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.created-ipv4-flag' value='true' />
                                                            </set>
                                                            <for silentFailure='true' index='vnfc-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names_length`' >
                                                                <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vip-ipv4-address-list:relationship-list"
   key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner
	  AND cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region
	  AND vip-ipv4-address-list.vip-ipv4-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v4[$ipv4-index]"
   force="true" pfx="tmp.AnAI-data">
                                                                    <parameter name="relationship-list.relationship[0].related-to" value="subnet" />
                                                                    <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].network-id
        + '/subnets/subnet/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.ipv4-subnet-id`" />
                                                                    <parameter name="relationship-list.relationship[1].related-to" value="vnfc" />
                                                                    <parameter name="relationship-list.relationship[1].related-link"
      value="`'/aai/v$/network/vnfcs/vnfc/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name`" />
                                                                    <outcome value='failure'>
                                                                        <block atomic="true">
                                                                            <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                            <return status='failure'>
                                                                                <parameter name='ack-final' value='Y'/>
                                                                                <parameter name="error-code" value="500" />
                                                                                <parameter name="error-message" value="Error updating vip-ipv4-address-list relationships in AAI" />
                                                                            </return>
                                                                        </block>
                                                                    </outcome>
                                                                    <outcome value='not-found'>
                                                                        <block atomic="true">
                                                                            <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                            <return status='failure'>
                                                                                <parameter name='ack-final' value='Y'/>
                                                                                <parameter name="error-code" value="500" />
                                                                                <parameter name="error-message" value="Not-found error updating vip-ipv4-address-list relationships" />
                                                                            </return>
                                                                        </block>
                                                                    </outcome>
                                                                </save>
                                                            </for>
                                                        </block>
                                                    </for>
                                                    <for silentFailure='true' index='ipv6-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6_length`' >
                                                        <block atomic="true">
                                                            <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" 
	resource="vip-ipv6-address-list" 
	key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner
	  AND cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region
	  AND vip-ipv6-address-list.vip-ipv6-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6[$ipv6-index]" >
                                                                <parameter name="vip-ipv6-address" value="`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6[$ipv6-index]`" />
                                                                <parameter name="vip-ipv6-prefix-length" value="128" />
                                                                <parameter name="is-floating" value="false" />
                                                                <outcome value='failure'>
                                                                    <block atomic="true">
                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                        <return status='failure'>
                                                                            <parameter name='ack-final' value='Y'/>
                                                                            <parameter name="error-code" value="500" />
                                                                            <parameter name="error-message" value="Error saving vip-ipv6-address-list in AAI" />
                                                                        </return>
                                                                    </block>
                                                                </outcome>
                                                                <outcome value='not-found'>
                                                                    <block atomic="true">
                                                                        <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                        <return status='failure'>
                                                                            <parameter name='ack-final' value='Y'/>
                                                                            <parameter name="error-code" value="500" />
                                                                            <parameter name="error-message" value="Not-found error saving vip-ipv6-address-list" />
                                                                        </return>
                                                                    </block>
                                                                </outcome>
                                                            </save>
                                                            <set>
                                                                <parameter name='tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.created-ipv6-flag' value='true' />
                                                            </set>
                                                            <for silentFailure='true' index='vnfc-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names_length`' >
                                                                <save plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
   resource="vip-ipv6-address-list:relationship-list"
   key="cloud-region.cloud-owner = $prop.cloud-region.cloud-owner
	  AND cloud-region.cloud-region-id = $vf-module-topology-operation-input.vf-module-request-input.aic-cloud-region
	  AND vip-ipv6-address-list.vip-ipv6-address = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.floating-ip-v6[$ipv6-index]"
   force="true" pfx="tmp.AnAI-data">
                                                                    <parameter name="relationship-list.relationship[0].related-to" value="subnet" />
                                                                    <parameter name="relationship-list.relationship[0].related-link"
      value="`'/aai/v$/network/l3-networks/l3-network/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].network-id
        + '/subnets/subnet/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-networks.vm-network[$vm-network-index].floating-ips.ipv6-subnet-id`" />
                                                                    <parameter name="relationship-list.relationship[1].related-to" value="vnfc" />
                                                                    <parameter name="relationship-list.relationship[1].related-link"
      value="`'/aai/v$/network/vnfcs/vnfc/'
        + $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vnfc-names[$vnfc-index].vnfc-name`" />
                                                                    <outcome value='failure'>
                                                                        <block atomic="true">
                                                                            <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                            <return status='failure'>
                                                                                <parameter name='ack-final' value='Y'/>
                                                                                <parameter name="error-code" value="500" />
                                                                                <parameter name="error-message" value="Error updating vip-ipv6-address-list relationships in AAI" />
                                                                            </return>
                                                                        </block>
                                                                    </outcome>
                                                                    <outcome value='not-found'>
                                                                        <block atomic="true">
                                                                            <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                                            <return status='failure'>
                                                                                <parameter name='ack-final' value='Y'/>
                                                                                <parameter name="error-code" value="500" />
                                                                                <parameter name="error-message" value="Not-found error updating vip-ipv6-address-list relationships" />
                                                                            </return>
                                                                        </block>
                                                                    </outcome>
                                                                </save>
                                                            </for>
                                                        </block>
                                                    </for>
                                                </block>
                                            </for>
                                        </block>
                                    </for>
                                    <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-vlan-tagging-assign' mode='sync' >
                                        <outcome value='failure'>
                                            <block atomic="true">
                                                <call module='GENERIC-RESOURCE-API' rpc='vf-module-topology-assign-rollback' mode='sync' ></call>
                                                <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='printContext' >
                                                    <parameter name='filename' value='/var/tmp/bgb-vlantaggingfailure.log' />
                                                </execute>
                                                <return status='failure'></return>
                                            </block>
                                        </outcome>
                                    </call>
                                    <for silentFailure='true' index='vm-type-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm_length`' >
                                        <for index='vm-index' start='0' end='`$tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-count`' >
                                            <block atomic="true">
                                                <delete plugin='org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource' resource='SQL'
  key='DELETE from VIPR_CONFIGURATION WHERE vnf_id = $service-data.vnfs.vnf[$vnf-index].vnf-id
     AND ecomp_service_instance_id = $service-data.service-information.service-instance-id
     AND vm_name = $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vm-name[$vm-index]' >
                                                    <outcome value='failure'>
                                                        <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                                                            <parameter name="logger" value="message-log"/>
                                                            <parameter name="field1" value="__TIMESTAMP__"/>
                                                            <parameter name="field2" value="GENERIC-RESOURCE-API.vf-module-topology-operation-assign:REQID"/>
                                                            <parameter name="field3" value="`$vf-module-topology-operation-input.sdnc-request-header.svc-request-id`"/>
                                                            <parameter name="field4" value="Failed to insert VIPR_CONFIGURATION record"/>
                                                        </record>
                                                    </outcome>
                                                </delete>
                                                <save plugin="org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource" resource="SQL"
key="INSERT INTO VIPR_CONFIGURATION (vnf_id, vnf_name, ecomp_service_instance_id, vm_name, cloud_region_id, cloud_owner) VALUES ( $service-data.vnfs.vnf[$vnf-index].vnf-id , $service-data.vnfs.vnf[$vnf-index].vnf-data.vnf-topology.vnf-topology-identifier-structure.vnf-name , $service-data.service-information.service-instance-id , $tmp.vf-module-topology.vf-module-assignments.vms.vm[$vm-type-index].vm-names.vm-name[$vm-index] , $tmp.vf-module-topology.aic-cloud-region , $prop.cloud-region.cloud-owner )" >
                                                    <outcome value='failure'>
                                                        <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                                                            <parameter name="logger" value="message-log"/>
                                                            <parameter name="field1" value="__TIMESTAMP__"/>
                                                            <parameter name="field2" value="GENERIC-RESOURCE-API.vf-module-topology-operation-assign:REQID"/>
                                                            <parameter name="field3" value="`$vf-module-topology-operation-input.sdnc-request-header.svc-request-id`"/>
                                                            <parameter name="field4" value="Failed to insert VIPR_CONFIGURATION record"/>
                                                        </record>
                                                    </outcome>
                                                </save>
                                            </block>
                                        </for>
                                    </for>
                                    <set>
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.' value='tmp.vf-module-topology.' />
                                    </set>
                                    <set>
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.sdnc-request-header.'
   value='$vf-module-topology-operation-input.sdnc-request-header.' />
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.request-information.'
   value='$vf-module-topology-operation-input.request-information.' />
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.service-information.'
   value='$vf-module-topology-operation-input.service-information.' />
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vnf-information.'
   value='$vf-module-topology-operation-input.vnf-information.' />
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-information.'
   value='$vf-module-topology-operation-input.vf-module-information.' />
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-request-input.'
   value='$vf-module-topology-operation-input.vf-module-request-input.' />
                                    </set>
                                    <set>
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.order-status'
  value='PendingCreate' />
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.last-rpc-action'
  value='`$vf-module-topology-operation-input.sdnc-request-header.svc-action`' />
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-level-oper-status.last-action'
  value='`$vf-module-topology-operation-input.sdnc-request-header.request-action`' />
                                    </set>
                                    <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='printContext' >
                                        <parameter name='filename' value='/var/tmp/bgb-vfmodule.log' />
                                    </execute>
                                    <return status='success'>
                                        <parameter name="ack-final-indicator" value="Y" />
                                        <parameter name="error-code" value="200" />
                                        <parameter name="error-message" value="`$error-message`" />
                                    </return>
                                </block>
                            </block>
                        </outcome>
                    </get-resource>
                </outcome>
            </switch>
        </block>
    </method>
</service-logic>