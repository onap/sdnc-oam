<service-logic
    xmlns='http://www.onap.org/sdnc/svclogic'
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.onap.org/sdnc/svclogic ./svclogic.xsd' module='GENERIC-RESOURCE-API' version='${project.version}'>
    <method rpc='sotn-vf-operation-uni-create' mode='sync'>
        <block atomic="true">
            <set>
                <parameter name='vnf-index' value='0' />
            </set>
            <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`'>
                <outcome value=''>
                    <set>
                        <parameter name='vf-index' value='0' />
                    </set>
                </outcome>
                <outcome value='Other'>
                    <block>
                        <set>
                            <parameter name='vf-index' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length`' />
                        </set>
                        <for index='idx' start='0' end='`$vf-index`' >
                            <switch test="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-id == $vf-module-topology-operation-input.vf-module-information.vf-module-id`">
                                <outcome value='true'>
                                    <return status='failure'>
                                        <parameter name='ack-final' value='Y'/>
                                        <parameter name="error-code" value="500" />
                                        <parameter name="error-message" value="service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$idx].vf-module-id already found in service-data" />
                                    </return>
                                </outcome>
                            </switch>
                        </for>
                    </block>
                </outcome>
            </switch>
            <for index="idx" start="0" end="`$vf-module-topology-operation-input.vf-module-request-input.vf-module-input-parameters.param_length`">
                <block>
                    <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='split' >
                        <parameter name="original_string" value='`$vf-module-topology-operation-input.vf-module-request-input.vf-module-input-parameters.param[$idx].name`'/>
                        <parameter name="regex" value="_"/>
                        <parameter name="ctx_memory_result_key" value="param-prefix"/>
                    </execute>
                    <set>
                        <parameter name="`vf-module-topology-operation-input.vf-module-request-input.vf-module-input-parameters.param[$idx].name`" value='`$param-prefix[$param-prefix_length -1]`'/>
                    </set>
                </block>
            </for>
            <set>
                <parameter name='vf-module-request-input.' value='`$vf-module-topology-operation-input.vf-module-request-input.`' />
            </set>
            <call module='GENERIC-RESOURCE-API' rpc='sotn-get-vf-module-uni-param' mode='sync' ></call>
            <set>
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length' value='`$vf-index + 1`' />
            </set>
            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='generateUUID' >
                <parameter name="ctx-destination" value="prop.vf-id"/>
            </execute>
            <set>
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-id' value='`$prop.vf-id`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-data.sdnc-request-header.' value='`$vf-module-topology-operation-input.sdnc-request-header.`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-data.request-information.' value='`$vf-module-topology-operation-input.request-information.`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-data.service-information.' value='`$vf-module-topology-operation-input.service-information.`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-data.vnf-information.' value='`$vf-module-topology-operation-input.vnf-information.`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-data.vf-module-information.' value='`$vf-module-topology-operation-input.vf-module-information.`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-data.vf-module-request-input.' value='`$vf-module-topology-operation-input.vf-module-request-input.`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-data.vf-module-topology.' value='`$tmp.vf-module-topology.`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module_length' value='`$vf-index+1`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-id' value='`$vf-module-topology-operation-input.vnf-information.vnf-id`' />
            </set>
            <set>
                <parameter name='vf-module-id' value='`$prop.vf-id`'/>
                <parameter name='vf-module-object-path' value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'
 + $vf-module-topology-operation-input.service-information.service-instance-id
 + '/service-data/vnfs/vnf/'
 + $service-data.vnfs.vnf[$vnf-index].vnf-id
 + '/vnf-data/vf-modules/vf-module/'
 + $prop.vf-id
 + '/vf-module-data/vf-module-topology/'`"/>
                <parameter name='vnf-object-path'
 value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'
 + $vf-module-topology-operation-input.service-information.service-instance-id
 + '/service-data/vnfs/vnf/'
 + $service-data.vnfs.vnf[$vnf-index].vnf-id
 + '/vnf-data/vnf-topology/'`"/>
                <parameter name='service-object-path'
 value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'
 + $vf-module-topology-operation-input.service-information.service-instance-id
 + '/service-data/service-topology/'`"/>
                <!--+ $vf-module-topology-operation-input.vf-module-information.vf-module-id-->
            </set>
            <set>
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-data.vf-module-level-oper-status.order-status'  value='Created' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-data.vf-module-level-oper-status.last-rpc-action'  value='`$vf-module-topology-operation-input.sdnc-request-header.svc-action`' />
                <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-index].vf-module-data.vf-module-level-oper-status.last-action'  value='`$vf-module-topology-operation-input.sdnc-request-header.request-action`' />
            </set>
            <save plugin='org.onap.ccsdk.sli.adaptors.aai.AAIService' resource='uni' 
      key='uni.id = $prop.vf-id' >
                <parameter name="id" value="`$prop.vf-id`" />
                <parameter name="tp-id" value='`$prop.uni.tp-id`' />
                <parameter name='cVLAN' value='`$prop.uni.cVLAN`' />
                <parameter name='operational-status' value='Created' />
                <parameter name='model-customization-id' value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-customization-uuid`' />
                <parameter name='model-invariant-id' value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-invariant-uuid`' />
                <parameter name='model-version-id' value='`$vf-module-topology-operation-input.vf-module-information.onap-model-information.model-uuid`' />
                <parameter name='selflink' value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'  + $vf-module-topology-operation-input.service-information.service-instance-id  + '/service-data/vnfs/vnf/'  + $service-data.vnfs.vnf[$vnf-index].vnf-id  + '/vnf-data/vf-modules/vf-module/' + $prop.vf-id + '/vf-module-data/'` " />
            </save>
            <!--<save plugin='org.onap.ccsdk.sli.adaptors.aai.AAIService' resource='generic-vnf:relationship-list' -->
            <!--      key='generic-vnf.vnf-id = $service-data.vnfs.vnf[$vnf-index].vnf-id' -->
            <!--      force="true" pfx="tmp.AnAI-data">-->
            <!--<parameter name="`relationship-list.relationship[$tmp.relationship_length].related-to`" value="uni" />-->
            <!--<parameter name="`relationship-list.relationship[$tmp.relationship_length].related-link`" value="`'/network/unis/uni/' + $prop.vf-id`" />-->
            <!--<parameter name="`relationship-list.relationship[$tmp.relationship_length].relationship-data[0].relationship-key`" value="id" />-->
            <!--<parameter name="`relationship-list.relationship[$tmp.relationship_length].relationship-data[0].relationship-value`" value="`$prop.vf-id`" />-->
            <save plugin='org.onap.ccsdk.sli.adaptors.aai.AAIService' resource='generic-vnf:relationship-list' 
      key='generic-vnf.vnf-id = $service-data.vnfs.vnf[$vnf-index].vnf-id' 
      force="true" pfx="tmp.AnAI-data">
                <parameter name="relationship-list.relationship[0].related-to" value="uni" />
                <parameter name="relationship-list.relationship[0].related-link" value="`'/network/unis/uni/' + $prop.vf-id`" />
                <parameter name="relationship-list.relationship[0].relationship-data[0].relationship-key" value="id" />
                <parameter name="relationship-list.relationship[0].relationship-data[0].relationship-value" value="`$prop.vf-id`" />
            </save>
            <return status='success'>
                <parameter name="ack-final-indicator" value="Y" />
                <parameter name="error-code" value="200" />
                <parameter name="error-message" value="`$error-message`" />
            </return>
        </block>
    </method>
</service-logic>