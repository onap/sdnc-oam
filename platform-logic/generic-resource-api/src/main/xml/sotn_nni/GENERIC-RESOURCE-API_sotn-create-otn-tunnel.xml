<service-logic
    xmlns='http://www.onap.org/sdnc/svclogic'
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.onap.org/sdnc/svclogic ./svclogic.xsd' module='GENERIC-RESOURCE-API' version='${project.version}'>
    <method rpc='sotn-create-otn-tunnel' mode='sync'>
        <block atomic="true">
            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='contains' emitsOutcome='true' >
                <parameter name='source' value='`$oof.vpn.tp-id`' />
                <parameter name='target' value='`$domain-A.network-id`' />
                <outcome value='true'>
                    <block atomic="true">
                        <set>
                            <parameter name='otn-domain.' value='`$domain-A.`' />
                        </set>
                    </block>
                </outcome>
                <outcome value='false'>
                    <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='contains' emitsOutcome='true' >
                        <parameter name='source' value='`$oof.vpn.tp-id`' />
                        <parameter name='target' value='`$domain-B.network-id`' />
                        <outcome value='true'>
                            <block atomic="true">
                                <set>
                                    <parameter name='$otn-domain.' value='`$domain-B.`' />
                                </set>
                            </block>
                        </outcome>
                    </execute>
                </outcome>
            </execute>
            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='contains' emitsOutcome='true' >
                <parameter name='source' value='`$oof.vpn.tp-id`' />
                <parameter name='target' value='`$tmp.oofsolutions-first-src-pnf-name`' />
                <outcome value='true'>
                    <block atomic="true">
                        <set>
                            <parameter name='ietf-te_te.tunnels.tunnel[0].source' value='`$oof.vpn.access-node-id`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[0].destination' value='`$otn-domain.node-id`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[0].dst-ttp-id' value='`$otn-domain.ttp-id`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[0].ietf-otn-tunnel_dst-tpn' value='`$otn-domain.tpn`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[0].name' value='otntunnel-22' />
                            <parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.client-id' value='`$otn-domain.client-id`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.provider-id' value='`$otn-domain.provider-id`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.topology-id' value='`$otn-domain.te-topo-id`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[1].source' value='`$oof.vpn.access-node-id`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[1].destination' value='`$otn-domain.node-id`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[1].name' value='tptunnel-22' />
                            <parameter name='ietf-te_te.tunnels.tunnel[1].dependency-tunnels.dependency-tunnel[0].name' value='otntunnel-22' />
                            <parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.client-id' value='`$oof.vpn.access-client-id`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.provider-id' value='`$oof.vpn.access-provider-id`' />
                            <parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.topology-id' value='`$oof.vpn.access-topology-id`' />
                            <!--<set>-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[0].source' value='`$oof.vpn.access-node-id`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[0].destination' value='`$otn-domain.node-id`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[0].dst-ttp-id' value='`$otn-domain.ttp-id`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[0].ietf-otn-tunnel_dst-tpn' value='`$otn-domain.tpn`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[0].name' value='otntunnel-22' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.client-id' value='`$otn-domain.client-id`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.provider-id' value='`$otn-domain.provider-id`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.topology-id' value='`$otn-domain.te-topo-id`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[1].source' value='`$oof.vpn.access-node-id`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[1].destination' value='`$otn-domain.node-id`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[1].name' value='tptunnel-22' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[1].dependency-tunnels.dependency-tunnel[0].name' value='otntunnel-22' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.client-id' value='`$oof.vpn.access-client-id`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.provider-id' value='`$oof.vpn.access-provider-id`' />-->
                            <!--<parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.topology-id' value='`$oof.vpn.access-topology-id`' />-->
                        </set>
                    </block>
                </outcome>
                <outcome value='false'>
                    <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliStringUtils' method='contains' emitsOutcome='true' >
                        <parameter name='source' value='`$oof.vpn.tp-id`' />
                        <parameter name='target' value='`$tmp.oofsolutions-last-dst-pnf-name`' />
                        <outcome value='true'>
                            <block atomic="true">
                                <set>
                                    <parameter name='ietf-te_te.tunnels.tunnel[0].destination' value='`$oof.vpn.access-node-id`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[0].source' value='`$otn-domain.node-id`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[0].src-ttp-id' value='`$otn-domain.ttp-id`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[0].ietf-otn-tunnel_src-tpn' value='`$otn-domain.tpn`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[0].name' value='otntunnel-22' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.client-id' value='`$otn-domain.client-id`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.provider-id' value='`$otn-domain.provider-id`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.topology-id' value='`$otn-domain.te-topo-id`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[1].destination' value='`$oof.vpn.access-node-id`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[1].source' value='`$otn-domain.node-id`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[1].name' value='tptunnel-22' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[1].dependency-tunnels.dependency-tunnel[0].name' value='otntunnel-22' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.client-id' value='`$oof.vpn.access-client-id`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.provider-id' value='`$oof.vpn.access-provider-id`' />
                                    <parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.topology-id' value='`$oof.vpn.access-topology-id`' />
                                    <!--<set>-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[0].destination' value='`$oof.vpn.access-node-id`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[0].source' value='`$otn-domain.node-id`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[0].src-ttp-id' value='`$otn-domain.ttp-id`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[0].ietf-otn-tunnel_src-tpn' value='`$otn-domain.tpn`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[0].name' value='otntunnel-22' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.client-id' value='`$otn-domain.client-id`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.provider-id' value='`$otn-domain.provider-id`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[0].te-topology-identifier.topology-id' value='`$otn-domain.te-topo-id`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[1].destination' value='`$oof.vpn.access-node-id`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[1].source' value='`$otn-domain.node-id`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[1].name' value='tptunnel-22' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[1].dependency-tunnels.dependency-tunnel[0].name' value='otntunnel-22' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.client-id' value='`$oof.vpn.access-client-id`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.provider-id' value='`$oof.vpn.access-provider-id`' />-->
                                    <!--<parameter name='ietf-te_te.tunnels.tunnel[1].te-topology-identifier.topology-id' value='`$oof.vpn.access-topology-id`' />-->
                                </set>
                            </block>
                        </outcome>
                    </execute>
                </outcome>
            </execute>
            <switch test="`$prop.sdncRestApi.token_id`">
                <outcome value=''>
                    <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                        <parameter name="templateFileName" value="`$prop.restapi.templateDir + '/sotn-otn-tunnel-service.json'`" />
                        <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/restconf/data/ietf-te:te'`" />
                        <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                        <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                        <parameter name="format" value="json"/>
                        <parameter name="httpMethod" value="patch"/>
                        <parameter name='dirPath' value="/opt/onap/sdnc/restconfapi/yang" />
                        <!--<parameter name='dirPath' value="/opt/sdnc/restapi/yang" />-->
                        <parameter name="responsePrefix" value="vpn-result"/>
                        <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                        <parameter name="trustStorePassword" value="adminadmin"/>
                        <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                        <parameter name="keyStorePassword" value="adminadmin"/>
                        <outcome value='failure'>
                            <return status='failure'>
                                <parameter name='ack-final' value='Y'/>
                                <parameter name="error-code" value="500" />
                                <parameter name="error-message" value="Error executing Create vpn rest api" />
                            </return>
                        </outcome>
                        <outcome value='success'>
                            <block atomic="true"></block>
                        </outcome>
                    </execute>
                </outcome>
                <outcome value='Other'>
                    <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                        <parameter name="templateFileName" value="`$prop.restapi.templateDir + '/sotn-otn-tunnel-service.json'`" />
                        <parameter name="restapiUrl" value="`$prop.sdncRestApi.thirdpartySdnc.url + '/restconf/data/ietf-te:te'`" />
                        <parameter name="restapiUser" value="`$prop.sdncRestApi.thirdpartySdnc.user`" />
                        <parameter name="restapiPassword" value="`$prop.sdncRestApi.thirdpartySdnc.password`" />
                        <parameter name="format" value="json"/>
                        <parameter name="httpMethod" value="patch"/>
                        <parameter name='dirPath' value="/opt/onap/sdnc/restconfapi/yang" />
                        <!--<parameter name='dirPath' value="/opt/sdnc/restapi/yang" />-->
                        <parameter name="responsePrefix" value="vpn-result"/>
                        <parameter name="trustStoreFileName" value="/opt/onap/sdnc/data/stores/truststore.onap.client.jks"/>
                        <parameter name="trustStorePassword" value="adminadmin"/>
                        <parameter name="keyStoreFileName" value="/opt/onap/sdnc/data/stores/sdnc.p12"/>
                        <parameter name="keyStorePassword" value="adminadmin"/>
                        <parameter name='customHttpHeaders' value="`'X-ACCESS-TOKEN=' + $prop.sdncRestApi.token_id`" />
                        <outcome value='failure'>
                            <return status='failure'>
                                <parameter name='ack-final' value='Y'/>
                                <parameter name="error-code" value="500" />
                                <parameter name="error-message" value="Error executing Create vpn rest api" />
                            </return>
                        </outcome>
                        <outcome value='success'>
                            <block atomic="true"></block>
                        </outcome>
                    </execute>
                </outcome>
            </switch>
        </block>
    </method>
</service-logic>