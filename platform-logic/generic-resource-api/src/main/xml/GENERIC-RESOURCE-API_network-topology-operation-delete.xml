<?xml version="1.0" encoding="UTF-8"?>
<service-logic xmlns="http://www.onap.org/sdnc/svclogic" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.onap.org/sdnc/svclogic ./svclogic.xsd" module="GENERIC-RESOURCE-API" version="${project.version}">
    <method rpc="network-topology-operation-delete" mode="sync">
        <block atomic="true">
            <call module="GENERIC-RESOURCE-API" rpc="validate-network-input-parameters" mode="sync" />
            <switch test="`$service-data.networks.network_length`">
                <outcome value="">
                    <return status="failure">
                        <parameter name="ack-final" value="Y" />
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="network-topology-operation-input.network-request-input.network-id not found in service-data" />
                    </return>
                </outcome>
                <outcome value="Other">
                    <block atomic="true">
                        <for index="nidx" start="0" end="`$service-data.networks.network_length`">
                            <switch test="`$service-data.networks.network[$nidx].network-id == $network-topology-operation-input.network-information.network-id`">
                                <outcome value="true">
                                    <set>
                                        <parameter name="tmp.nidx" value="`$nidx`" />
                                        <parameter name="ctx.network-data." value="`$service-data.networks.network[$nidx].`" />
                                    </set>
                                </outcome>
                            </switch>
                        </for>
                        <switch test="`$tmp.nidx`">
                            <outcome value="">
                                <return status="failure">
                                    <parameter name="ack-final" value="Y" />
                                    <parameter name="error-code" value="500" />
                                    <parameter name="error-message" value="network-topology-operation-input.network-request-input.network-id not found in service-data" />
                                </return>
                            </outcome>
                        </switch>
                    </block>
                </outcome>
            </switch>
            <for index="idx" start="0" end="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param_length`">
                <block>
                    <switch test="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param[$idx].name == 'name'`">
                        <outcome value="true">
                            <set>
                                <parameter name="prop.l3vpn.name" value="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param[$idx].value`" />
                            </set>
                        </outcome>
                    </switch>
                    <switch test="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param[$idx].name == 'service-type'`">
                        <outcome value="true">
                            <set>
                                <parameter name="prop.l3vpn.service-type" value="`$service-data.networks.network[$tmp.nidx].network-data.network-request-input.network-input-parameters.param[$idx].value`" />
                            </set>
                        </outcome>
                    </switch>
                </block>
            </for>
            <get-resource plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService" resource="esr-thirdparty-sdnc" key="esr-thirdparty-sdnc.thirdparty-sdnc-id = $tmp.thirdparty-sdnc-id AND         depth = '1'" pfx="tmp.aai.esr-thirdparty-sdnc" local-only="false">
                <outcome value="success">
                    <block atomic="true" />
                </outcome>
                <outcome value="not-found">
                    <return status="failure">
                        <parameter name="ack-final" value="Y" />
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="Network model is_bound_to_vpn=true but no vpn_binding is present" />
                    </return>
                </outcome>
                <outcome value="Other">
                    <return status="failure">
                        <parameter name="ack-final" value="Y" />
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="Unexpected error retrieving vpn binding" />
                    </return>
                </outcome>
            </get-resource>
            <set>
                <parameter name="prop.sdncRestApi.thirdpartySdnc.url" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list[0].esr-system-info.serviceUrl`" />
                <parameter name="prop.sdncRestApi.templateDir" value="/opt/onap/sdnc/data" />
                <parameter name="prop.sdncRestApi.thirdpartySdnc.user" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list[0].esr-system-info.user-name`" />
                <parameter name="prop.sdncRestApi.thirdpartySdnc.password" value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list[0].esr-system-info.password`" />
            </set>
            <switch test="`$prop.l3vpn.service-type`">
                <outcome value="l3vpn-ipwan">
                    <execute plugin="org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode" method="sendRequest">
                        <parameter name="templateFileName" value="$prop.sdncRestApi.tempDir +'/l3smvpntemplate.json'" />
                        <parameter name="restapiUrl" value="$prop.sdncRestApi.thirdpartySdnc.url +'/restconf/data/huawei-ac-net-l3vpn-svc:l3vpn-svc-cfg/vpn-services/vpnservice='+$prop.l3vpn.name'" />
                        <parameter name="restapiUser" value="$prop.sdncRestApi.thirdpartySdnc.user" />
                        <parameter name="restapiPassword" value="$prop.sdncRestApi.thirdpartySdnc.password" />
                        <parameter name="format" value="json" />
                        <parameter name="httpMethod" value="delete" />
                        <parameter name="responsePrefix" value="restapi-result" />
                    </execute>
                </outcome>
            </switch>
            <block atomic="true">
                <set>
                    <parameter name="service-data.networks.network[$tmp.nidx].network-data.sdnc-request-header." value="`$network-topology-operation-input.sdnc-request-header.`" />
                    <parameter name="service-data.networks.network[$tmp.nidx].network-data.request-information." value="`$network-topology-operation-input.request-information.`" />
                </set>
                <set>
                    <parameter name="networkId" value="`$network-topology-operation-input.network-information.network-id`" />
                </set>
                <set>
                    <parameter name="network-object-path" value="`'restconf/config/GENERIC-RESOURCE-API:services/service/'  + $network-topology-operation-input.service-information.service-instance-id  + '/service-data/networks/network/'  + $networkId  + '/network-data/'` " />
                </set>
                <set>
                    <parameter name="service-data.networks.network[$tmp.nidx].network-data.network-level-oper-status.order-status" value="Deleted" />
                    <parameter name="service-data.networks.network[$tmp.nidx].network-data.network-level-oper-status.last-rpc-action" value="`$network-topology-operation-input.sdnc-request-header.svc-action`" />
                    <parameter name="service-data.networks.network[$tmp.nidx].network-data.network-level-oper-status.last-action" value="`$network-topology-operation-input.request-information.request-action`" />
                </set>
            </block>
            <return status="success">
                <parameter name="ack-final-indicator" value="Y" />
                <parameter name="error-code" value="200" />
                <parameter name="error-message" value="`$error-message`" />
            </return>
        </block>
    </method>
</service-logic>
