<service-logic
    xmlns='http://www.onap.org/sdnc/svclogic'
    xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.onap.org/sdnc/svclogic ./svclogic.xsd' module='GENERIC-RESOURCE-API' version='${project.version}'>
    <method rpc='self-serve-eipam-ip-assignment' mode='sync'>
        <block atomic="true">
            <switch test='`$ss.capability-name`'>
                <outcome value=''>
                    <return status="failure">
                        <parameter name="ack-final" value="Y" />
                        <parameter name="error-code" value="500"/>
                        <parameter name="error-message" value="ss.capability-name is null" />
                    </return>
                </outcome>
            </switch>
            <switch test='`$ss.capability-action`'>
                <outcome value=''>
                    <return status="failure">
                        <parameter name="ack-final" value="Y" />
                        <parameter name="error-code" value="500"/>
                        <parameter name="error-message" value="ss.capability-action is null" />
                    </return>
                </outcome>
                <outcome value='assign'>
                    <block atomic="true">
                        <call module='GENERIC-RESOURCE-API' rpc='self-service-capability-param-resolution' mode='sync' >
                            <outcome value='failure'>
                                <return status="failure">
                                    <parameter name="ack-final" value="Y" />
                                    <parameter name="error-code" value="500"/>
                                    <parameter name="error-message" value="`'Not all assignments are resolved' + $error-message`" />
                                </return>
                            </outcome>
                        </call>
                        <block>
                            <for index="pidx" start="0" end="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param_length`">
                                <set>
                                    <parameter name='tmp.ss.param.capability-name' 
	value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.capability-name`' />
                                </set>
                                <switch test='`$tmp.ss.param.capability-name == $ss.capability-name`'>
                                    <outcome value='true'>
                                        <break/>
                                    </outcome>
                                </switch>
                            </for>
                            <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                                <parameter name="logger" value="message-log"/>
                                <parameter name="field1" value="__TIMESTAMP__"/>
                                <parameter name="field2" value="`'SS: pidx: ' + $pidx`"/>
                            </record>
                            <for index="kidx" start="0" end="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key_length`">
                                <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key[$kidx].name`'>
                                    <outcome value='group-flag'>
                                        <set>
                                            <parameter name='tmp.ss.group-flag' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key[$kidx].value`' />
                                        </set>
                                    </outcome>
                                    <outcome value='plan-name'>
                                        <set>
                                            <parameter name='tmp.ss.plan-name' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key[$kidx].value`' />
                                        </set>
                                    </outcome>
                                    <outcome value='address-family'>
                                        <set>
                                            <parameter name='tmp.ss.address-family' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key[$kidx].value`' />
                                        </set>
                                    </outcome>
                                    <outcome value='client-key'>
                                        <set>
                                            <parameter name='tmp.ss.client-key' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key[$kidx].value`' />
                                        </set>
                                    </outcome>
                                </switch>
                            </for>
                        </block>
                        <call module='GENERIC-RESOURCE-API' rpc='self-serve-generate-FQPN' mode='sync' >
                            <outcome value='failure'>
                                <return status="failure">
                                    <parameter name="ack-final" value="Y" />
                                    <parameter name="error-code" value="500"/>
                                    <parameter name="error-message" value="`'Not all assignments are resolved' + $error-message`" />
                                </return>
                            </outcome>
                        </call>
                        <set>
                            <parameter name='eipam-ip-block.plans[0].requests[0].'
    value='self-serve-generate-FQPN-output.' />
                        </set>
                        <set>
                            <parameter name='eipam-ip-block.group-flag'
    value='`$tmp.ss.group-flag`' />
                            <parameter name='eipam-ip-block.plans[0].plan-name'
    value='`$tmp.ss.plan-name`' />
                            <parameter name='eipam-ip-block.plans[0].address-family'
    value="`$tmp.ss.address-family`" />
                            <parameter name='eipam-ip-block.plans[0].requests[0].client-key'
	value="`$tmp.ss.client-key`" />
                        </set>
                        <set>
                            <parameter name='eipam-ip-block.plans[0].requests_length' value='1' />
                        </set>
                        <execute plugin="com.att.sdnctl.sli.plugin.eipam.EIPAMPlugin" method="assignIPAddress">
                            <outcome value='failure'>
                                <block atomic="true">
                                    <set>
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.status' value='FAILED' />
                                    </set>
                                    <return status="failure">
                                        <parameter name="ack-final" value="Y" />
                                        <parameter name="error-code" value="500"/>
                                        <parameter name="error-message" value="`'An error occured while obtaining ip addresses from EIPAM: ' + $error-message`" />
                                    </return>
                                </block>
                            </outcome>
                        </execute>
                        <for index="pidx" start="0" end="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param_length`">
                            <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].name`'>
                                <outcome value='vmxvre_oam_ip_0'>
                                    <block>
                                        <set>
                                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].value' 
	value='`$eipam-ip-block.plans[0].requests[0].ip-prefix`' />
                                        </set>
                                        <set>
                                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.status' 
	value='SUCCESS' />
                                        </set>
                                    </block>
                                </outcome>
                                <outcome value='vmxvre_oam_ip_prefix_0'>
                                    <block>
                                        <set>
                                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].value' 
	value='`$eipam-ip-block.plans[0].requests[0].ip-prefix-length`' />
                                        </set>
                                        <set>
                                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.status' 
	value='SUCCESS' />
                                        </set>
                                    </block>
                                </outcome>
                                <outcome value='vmxvre_oam_gateway'>
                                    <block>
                                        <set>
                                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].value' 
	value='`$eipam-ip-block.plans[0].requests[0].ReservedAssignments[0].ReservedAssignment[3].ReservedKeyIPAddress`' />
                                        </set>
                                        <set>
                                            <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.status' 
	value='SUCCESS' />
                                        </set>
                                    </block>
                                </outcome>
                            </switch>
                        </for>
                    </block>
                </outcome>
                <outcome value='unassign'>
                    <block atomic="true">
                        <block>
                            <for index="pidx" start="0" end="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param_length`">
                                <set>
                                    <parameter name='tmp.ss.param.capability-name' 
	value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.capability-name`' />
                                </set>
                                <switch test='`$tmp.ss.param.capability-name == $ss.capability-name`'>
                                    <outcome value='true'>
                                        <break/>
                                    </outcome>
                                </switch>
                            </for>
                            <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                                <parameter name="logger" value="message-log"/>
                                <parameter name="field1" value="__TIMESTAMP__"/>
                                <parameter name="field2" value="`'SS: pidx: ' + $pidx`"/>
                            </record>
                            <for index="kidx" start="0" end="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key_length`">
                                <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key[$kidx].name`'>
                                    <outcome value='group-flag'>
                                        <set>
                                            <parameter name='tmp.ss.group-flag' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key[$kidx].value`' />
                                        </set>
                                    </outcome>
                                    <outcome value='plan-name'>
                                        <set>
                                            <parameter name='tmp.ss.plan-name' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key[$kidx].value`' />
                                        </set>
                                    </outcome>
                                    <outcome value='address-family'>
                                        <set>
                                            <parameter name='tmp.ss.address-family' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key[$kidx].value`' />
                                        </set>
                                    </outcome>
                                    <outcome value='client-key'>
                                        <set>
                                            <parameter name='tmp.ss.client-key' value='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.resource-key[$kidx].value`' />
                                        </set>
                                    </outcome>
                                </switch>
                            </for>
                        </block>
                        <get-resource plugin='org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource' resource='SQL'
	key='SELECT * from EIPAM_IP_ASSIGNMENTS 
		WHERE service_instance_id = $tmp.ss.service-instance-id
		AND client_key = $tmp.ss.client-key'>
                            <outcome value='not-found'>
                                <block></block>
                            </outcome>
                            <outcome value='success'>
                                <block atomic="true">
                                    <set>
                                        <parameter name='tmp.status' value="PENDING_DELETE" />
                                    </set>
                                    <update plugin="org.onap.ccsdk.sli.adaptors.resource.sql.SqlResource" resource="SQL"
	key="UPDATE EIPAM_IP_ASSIGNMENTS set status = $tmp.status 
		WHERE service_instance_id = $tmp.ss.service-instance-id 
		AND client_key = $tmp.ss.client-key" >
                                        <outcome value='failure'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="`'Error updating EIPAM_IP_ASSIGNMENTS table to unassign ip with client_key=' + $tmp.ss.client-key + ' and service_instance_id=' + $tmp.ss.service-instance-id`" />
                                            </return>
                                        </outcome>
                                    </update>
                                    <execute plugin="com.att.sdnctl.sli.plugin.eipam.EIPAMPlugin" method="unassignIPAddress">
                                        <parameter name="deleteEIPAM_status" value="`$tmp.status`" />
                                        <outcome value='failure'>
                                            <return status='failure'>
                                                <parameter name='ack-final' value='Y'/>
                                                <parameter name="error-code" value="500" />
                                                <parameter name="error-message" value="`'Error in EIPAMPlugin.unassignIPAddress with client-key='+ $tmp.ss.client-key`" />
                                            </return>
                                        </outcome>
                                    </execute>
                                </block>
                            </outcome>
                        </get-resource>
                        <for index="pidx" start="0" end="`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param_length`">
                            <switch test='`$service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].name`'>
                                <outcome value='vmxvre_oam_ip_0'>
                                    <set>
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.status' 
	value='DELETED' />
                                    </set>
                                </outcome>
                                <outcome value='vmxvre_oam_ip_prefix_0'>
                                    <set>
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.status' 
	value='DELETED' />
                                    </set>
                                </outcome>
                                <outcome value='vmxvre_oam_gateway'>
                                    <set>
                                        <parameter name='service-data.vnfs.vnf[$vnf-index].vnf-data.vf-modules.vf-module[$vf-module-index].vf-module-data.vf-module-topology.vf-module-parameters.param[$pidx].resource-resolution-data.status' 
	value='DELETED' />
                                    </set>
                                </outcome>
                            </switch>
                        </for>
                    </block>
                </outcome>
            </switch>
            <execute plugin='org.onap.ccsdk.sli.core.slipluginutils.SliPluginUtils' method='printContext' >
                <parameter name='filename' value='/var/tmp/ss.eipam.log' />
            </execute>
        </block>
    </method>
</service-logic>