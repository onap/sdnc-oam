<service-logic
        xmlns='http://www.onap.org/sdnc/svclogic'
        xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.onap.org/sdnc/svclogic ./svclogic.xsd' module='GENERIC-RESOURCE-API' version='${project.version}'>
    <method rpc='network-topology-operation-activate' mode='sync'>
        <block atomic='true'>
            <call module='GENERIC-RESOURCE-API' rpc='validate-network-input-parameters' mode='sync' ></call>
            <get-resource plugin="org.onap.ccsdk.sli.adaptors.aai.AAIService"
                          resource="l3-dci-connects"
                          key="l3-dci-connects.id = $tmp.id AND depth = '1'"
                          pfx='tmp.aai.l3-dci-connects' local-only='false' >
                <outcome value='success'>
                    <block></block>
                </outcome>
                <outcome value='not-found'>
                    <return status='failure'>
                        <parameter name='error-code' value='' />
                        <parameter name='error-message' value='' />
                    </return>
                </outcome>
                <outcome value='Other'>
                    <return status='failure'>
                        <parameter name='error-code' value='' />
                        <parameter name='error-message' value='' />
                    </return>
                </outcome>
            </get-resource>
            <set>
                <parameter name='prop.sdncRestApi.thirdpartySdnc.url' value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list[0].esr-system-info.serviceUrl`" />
                <parameter name='prop.sdncRestApi.templateDir' value='/opt/onap/sdnc/data' />
                <parameter name='prop.sdncRestApi.thirdpartySdnc.user' value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list[0].esr-system-info.user-name`" />
                <parameter name='prop.sdncRestApi.thirdpartySdnc.password' value="`$tmp.aai.esr-thirdparty-sdnc.esr-system-info-list[0].esr-system-info.password`" />
            </set>
            <for index='idx' start='0' end='`$network-topology-operation-input.network-request-input.network-input-parameters.param_length`' >
                <block>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'name'`">
                        <outcome value='true'>
                            <set>
                                <parameter name='prop.l3-dci-connects.name' value='`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`' />
                            </set>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'description'`">
                        <outcome value='true'>
                            <set>
                                <parameter name='prop.l3-dci-connects.description' value='`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`' />
                            </set>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'router_id'`">
                        <outcome value='true'>
                            <set>
                                <parameter name='prop.l3-dci-connects.router_id' value='`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`' />
                            </set>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'local_networks'`">
                        <outcome value='true'>
                            <set>
                                <parameter name='prop.l3-dci-connects.local_networks' value='`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`' />
                            </set>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'evpn_irts'`">
                        <outcome value='true'>
                            <set>
                                <parameter name='prop.l3-dci-connects.evpn_irts' value='`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`' />
                            </set>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'evpn_erts'`">
                        <outcome value='true'>
                            <set>
                                <parameter name='prop.l3-dci-connects.evpn_erts' value='`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`' />
                            </set>
                        </outcome>
                    </switch>
                    <switch test="`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].name == 'l3_vni'`">
                        <outcome value='true'>
                            <set>
                                <parameter name='prop.l3-dci-connects.l3_vni' value='`$network-topology-operation-input.network-request-input.network-input-parameters.param[$idx].value`' />
                            </set>
                        </outcome>
                    </switch>
                </block>
            </for>
            <execute plugin='com.att.sdnctl.sli.SliPluginUtils.SliPluginUtils' method='generateUUID' >
                <parameter name="ctx-destination" value="prop.l3-dci-connects.id"/>
                <outcome value='failure'>
                    <return status='failure'>
                        <parameter name='error-code' value='' />
                        <parameter name='error-message' value='' />
                    </return>
                </outcome>
                <outcome value='success'>
                    <block></block>
                </outcome>
            </execute>
            <record plugin="org.onap.ccsdk.sli.core.sli.recording.Slf4jRecorder">
                <parameter name="logger" value="message-log"/>
                <parameter name="field1" value="__TIMESTAMP__"/>
                <parameter name="field2" value="GENERIC-RESOURCE-API.l3-dci-connects-network-topology-operation-activate"/>
                <parameter name='field3' value='`$l3-dci-connects.name`' />
                <parameter name='field3' value='`$l3-dci-connects.id`' />
                <parameter name='field4' value='`$l3-dci-connects.description`' />
                <parameter name='field5' value='`$l3-dci-connects.router_id`' />
                <parameter name='field6' value='`$l3-dci-connects.local_networks`' />
                <parameter name='field7' value='`$l3-dci-connects.evpn_irts`' />
                <parameter name='field8' value='`$l3-dci-connects.evpn_erts`' />
                <parameter name='field9' value='`$l3-dci-connects.l3_vni`' />
            </record>
            <execute plugin='org.onap.ccsdk.sli.plugins.restapicall.RestapiCallNode' method='sendRequest' >
                <parameter name="templateFileName" value="$prop.sdncRestApi.tempDir +'/l3-dci-connects-template.json'"/>
                <parameter name="restapiUrl" value="$prop.sdncRestApi.thirdpartySdnc.url +'/v2.0/l3-dci-connects'"/>
                <parameter name="restapiUser" value="$prop.sdncRestApi.thirdpartySdnc.user"/>
                <parameter name="restapiPassword" value="$prop.sdncRestApi.thirdpartySdnc.password"/>
                <parameter name="format" value="json"/>
                <parameter name="httpMethod" value="post"/>
                <parameter name="responsePrefix" value="restapi-result"/>
                <outcome value='failure'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="Error updating md-sal for contrail-route-allotted-resource" />
                    </return>
                </outcome>
                <outcome value='not-found'>
                    <return status='failure'>
                        <parameter name='ack-final' value='Y'/>
                        <parameter name="error-code" value="500" />
                        <parameter name="error-message" value="Error updating md-sal for contrail-route-allotted-resource" />
                    </return>
                </outcome>
            </execute>
            <return status='success'>
            <return status='success'>
                <parameter name="ack-final-indicator" value="Y" />
                <parameter name="error-code" value="200" />
                <parameter name="error-message" value="`$error-message`" />
            </return>
        </block>
    </method>
</service-logic>